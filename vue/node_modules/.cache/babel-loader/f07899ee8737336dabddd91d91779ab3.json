{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cpdf\",\n  id: \"cpdf\"\n};\nconst _hoisted_2 = {\n  class: \"center\"\n};\nconst _hoisted_3 = {\n  class: \"contor\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Page: \");\n\nconst _hoisted_5 = [\"textContent\"];\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" / \");\n\nconst _hoisted_7 = [\"textContent\"];\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"canvas\", {\n  class: \"canvasstyle\",\n  id: \"the-canvas\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_top_normal_bar = _resolveComponent(\"top-normal-bar\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_top_normal_bar, {\n    normalTitle: \"合同查看\"\n  }), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prev && $options.prev(...args))\n  }, \"上一页\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.next && $options.next(...args))\n  }, \"下一页\"), _createElementVNode(\"span\", null, [_hoisted_4, _createElementVNode(\"span\", {\n    textContent: _toDisplayString($data.page_num)\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5), _hoisted_6, _createElementVNode(\"span\", {\n    textContent: _toDisplayString($data.page_count)\n  }, null, 8\n  /* PROPS */\n  , _hoisted_7)]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addscale && $options.addscale(...args))\n  }, \"加\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.minus && $options.minus(...args))\n  }, \"减\"), _createElementVNode(\"button\", {\n    id: \"prev\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.closepdf && $options.closepdf(...args))\n  }, \"关闭\")]), _hoisted_8])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;AAAOC,IAAE,EAAC;;;AAEdD,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;iDAGH;;;;iDAAqC;;;;gCAM7CE,oBAAqD,QAArD,EAAqD;AAA7CF,OAAK,EAAC,aAAuC;AAAzBC,IAAE,EAAC;AAAsB,CAArD;;AAAA;;;;;uBAZJE,oBAcM,KAdN,cAcM,CAbJC,aAAoDC,yBAApD,EAAoD;AAApCC,eAAW,EAAC;AAAwB,GAApD,CAaI,EAZJJ,oBAWM,KAXN,cAWM,CAVJA,oBAQM,KARN,cAQM,CAPJA,oBAAkC,QAAlC,EAAkC;AAAzBK,WAAK,yCAAEC,uCAAF;AAAoB,GAAlC,EAAsB,KAAtB,CAOI,EANJN,oBAAkC,QAAlC,EAAkC;AAAzBK,WAAK,yCAAEC,uCAAF;AAAoB,GAAlC,EAAsB,KAAtB,CAMI,EALJN,oBAAsF,MAAtF,EAAsF,IAAtF,EAAsF,aAA1EA,oBAA+B,MAA/B,EAA+B;iBAAzBO,iBAAQC,KAAS,SAAjB;AAAyB,GAA/B;;AAAA,eAA0E,cAAxCR,oBAAiC,MAAjC,EAAiC;iBAA3BO,iBAAQC,KAAW,WAAnB;AAA2B,GAAjC;;AAAA,eAAwC,CAAtF,CAKI,EAHJR,oBAAqC,QAArC,EAAqC;AAA5BK,WAAK,yCAAEC,+CAAF;AAAuB,GAArC,EAA2B,GAA3B,CAGI,EAFJN,oBAAkC,QAAlC,EAAkC;AAAzBK,WAAK,yCAAEC,yCAAF;AAAoB,GAAlC,EAAwB,GAAxB,CAEI,EADJN,oBAA+C,QAA/C,EAA+C;AAAvCD,MAAE,EAAC,MAAoC;AAA5BM,WAAK,yCAAEC,+CAAF;AAAuB,GAA/C,EAAoC,IAApC,CACI,CARN,CAUI,EADJG,UACI,CAXN,CAYI,CAdN","names":["class","id","_createElementVNode","_createElementBlock","_createVNode","_component_top_normal_bar","normalTitle","onClick","$options","_toDisplayString","$data","_hoisted_8"],"sourceRoot":"","sources":["E:\\code\\springboot+vue\\class_choose_book1\\vue\\src\\views\\ReadPdf.vue"],"sourcesContent":["<template>\r\n  <div class=\"cpdf\" id=\"cpdf\">\r\n    <top-normal-bar normalTitle=\"合同查看\"></top-normal-bar>\r\n    <div class=\"center\">\r\n      <div class=\"contor\">\r\n        <button @click=\"prev\">上一页</button>\r\n        <button @click=\"next\">下一页</button>\r\n        <span>Page: <span v-text=\"page_num\"></span> / <span v-text=\"page_count\"></span></span>\r\n\r\n        <button @click=\"addscale\" >加</button>\r\n        <button @click=\"minus\" >减</button>\r\n        <button id=\"prev\" @click=\"closepdf\">关闭</button>\r\n      </div>\r\n      <canvas class=\"canvasstyle\" id=\"the-canvas\"></canvas>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PDFJS from 'pdfjs-dist'\r\n\r\nexport default {\r\n  name: 'c-pdf',\r\n  props: ['pdfurl'],\r\n  data() {\r\n    return {\r\n      pdfDoc: null, //pdfjs 生成的对象\r\n      pageNum: 1,//\r\n      pageRendering: false,\r\n      pageNumPending: null,\r\n      scale: 1,//放大倍数\r\n      page_num: 0,//当前页数\r\n      page_count: 0,//总页数\r\n      maxscale: 2,//最大放大倍数\r\n      minscale: 0.8//最小放大倍数\r\n    }\r\n  },\r\n  methods: {\r\n    renderPage(num) { //渲染pdf\r\n      let vm = this;\r\n      this.pageRendering = true;\r\n      let canvas = document.getElementById('the-canvas')\r\n      // Using promise to fetch the page\r\n      this.pdfDoc.getPage(num).then(function(page) {\r\n        var viewport = page.getViewport(vm.scale);\r\n        //alert(vm.canvas.height)\r\n        canvas.height = viewport.height;\r\n        canvas.width = viewport.width;\r\n\r\n        // Render PDF page into canvas context\r\n        var renderContext = {\r\n          canvasContext: vm.ctx,\r\n          viewport: viewport\r\n        };\r\n        var renderTask = page.render(renderContext);\r\n\r\n        // Wait for rendering to finish\r\n        renderTask.promise.then(function() {\r\n          vm.pageRendering = false;\r\n          if(vm.pageNumPending !== null) {\r\n            // New page rendering is pending\r\n            vm.renderPage(vm.pageNumPending);\r\n            vm.pageNumPending = null;\r\n          }\r\n        });\r\n      });\r\n      vm.page_num = vm.pageNum;\r\n\r\n    },\r\n    addscale() {//放大\r\n      if(this.scale >= this.maxscale) {\r\n        return\r\n      }\r\n      this.scale += 0.1;\r\n      this.queueRenderPage(this.pageNum)\r\n    },\r\n    minus() {//缩小\r\n      if(this.scale <= this.minscale) {\r\n        return\r\n      }\r\n      this.scale -= 0.1;\r\n      this.queueRenderPage(this.pageNum)\r\n    },\r\n    prev() {//上一页\r\n      let vm = this\r\n      if(vm.pageNum <= 1) {\r\n        return;\r\n      }\r\n      vm.pageNum--;\r\n      vm.queueRenderPage(vm.pageNum);\r\n    },\r\n    next() {//下一页\r\n      let vm = this;\r\n      if(vm.pageNum >= vm.page_count) {\r\n        return;\r\n      }\r\n      vm.pageNum++;\r\n      vm.queueRenderPage(vm.pageNum);\r\n    },\r\n    closepdf() {//关闭PDF\r\n      this.$emit('closepdf')\r\n    },\r\n    queueRenderPage(num) {\r\n      if(this.pageRendering) {\r\n        this.pageNumPending = num;\r\n      } else {\r\n        this.renderPage(num);\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ctx() {\r\n      let id = document.getElementById('the-canvas')\r\n      return id.getContext('2d');\r\n    }\r\n  },\r\n  mounted() {\r\n    let vm = this;\r\n    PDFJS.getDocument(vm.pdfurl).then(function(pdfDoc_) { //初始化pdf\r\n      vm.pdfDoc = pdfDoc_;\r\n      vm.page_count = vm.pdfDoc.numPages;\r\n      vm.renderPage(vm.pageNum);\r\n    });\r\n  }\r\n}\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}