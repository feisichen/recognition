{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"padding\": \"10px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin\": \"10px 0\"\n  }\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"查询\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"选课\");\n\nconst _hoisted_5 = {\n  style: {\n    \"margin\": \"10px 10px 10px\",\n    \"font-family\": \"'Microsoft YaHei'\",\n    \"font-size\": \"15px\",\n    \"color\": \"rgb(96, 98, 102)\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n    modelValue: $data.search,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.search = $event),\n    placeholder: \"请输入关键字\",\n    style: {\n      \"width\": \"30%\"\n    },\n    clearable: \"\"\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    style: {\n      \"margin-left\": \"5px\"\n    },\n    onClick: $options.load\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"])]), _createVNode(_component_el_table, {\n    data: $data.tableData,\n    border: \"\",\n    stripe: \"\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"term\",\n      label: \"学期\",\n      width: \"100%\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"courseId\",\n      label: \"课号\",\n      width: \"100%\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"courseName\",\n      label: \"课名\",\n      width: \"300%\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"credit\",\n      label: \"学分\",\n      width: \"60%\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"teacherId\",\n      label: \"教师号\",\n      width: \"150%\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"teacherName\",\n      label: \"教师名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"time\",\n      label: \"时间\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"currentNum\",\n      label: \" 当前人数\",\n      width: \"90%\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"limitNum\",\n      label: \"人数上限\",\n      width: \"90%\"\n    }), _createVNode(_component_el_table_column, {\n      fixed: \"right\",\n      label: \"操作\",\n      width: \"120\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_popconfirm, {\n        title: \"确定选择此课程吗？\",\n        onConfirm: $event => $options.choose(scope.row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          plain: \"\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onConfirm\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"]), _createElementVNode(\"div\", _hoisted_5, \"共 \" + _toDisplayString($data.total) + \" 条\", 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":"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","names":["style","_createElementBlock","_createElementVNode","_createVNode","_component_el_input","$data","$event","placeholder","clearable","_component_el_button","type","onClick","$options","_component_el_table","data","border","stripe","_component_el_table_column","prop","label","width","sortable","fixed","default","scope","_component_el_popconfirm","title","onConfirm","row","reference","plain","size","_toDisplayString"],"sourceRoot":"","sources":["E:\\code\\springboot+vue\\class_choose2\\vue\\src\\views\\StudentChoose.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 10px;\">\n\n    <div style=\"margin: 10px 0;\">\n      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 30%;\" clearable/>\n      <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"load\">查询</el-button>\n    </div>\n\n    <el-table :data=\"tableData\" border stripe style=\"width: 100%;\">\n      <el-table-column prop=\"term\" label=\"学期\" width='100%' sortable/>\n      <el-table-column prop=\"courseId\" label=\"课号\" width='100%' sortable/>\n      <el-table-column prop=\"courseName\" label=\"课名\" width='300%' />\n      <el-table-column prop=\"credit\" label=\"学分\" width='60%'/>\n      <el-table-column prop=\"teacherId\" label=\"教师号\"  width='150%' sortable/>\n      <el-table-column prop=\"teacherName\" label=\"教师名\"/>\n      <el-table-column prop=\"time\" label=\"时间\"/>\n      <el-table-column prop=\"currentNum\" label=\" 当前人数\" width='90%'/>\n      <el-table-column prop=\"limitNum\" label=\"人数上限\" width='90%'/>\n\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\n        <template #default=\"scope\">\n          <el-popconfirm title=\"确定选择此课程吗？\" @confirm=\"choose(scope.row)\">\n            <template #reference>\n              <el-button type=\"primary\" plain size=\"small\">选课</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div style=\"margin: 10px 10px 10px; font-family: 'Microsoft YaHei' ; font-size: 15px; color: rgb(96, 98, 102);\">共 {{ total }} 条</div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"StudentChoose\",\n  created() {\n    this.getCredit();\n    this.load();\n  },\n  data() {\n    return {\n      search: '',\n      tableData: [],\n      total: 0,\n      credit: []\n    }\n  },\n  methods: {\n    load() {\n      request.get(\"/classes/forStudent\", {\n        params: {\n          search: this.search,\n          dep: sessionStorage.getItem(\"currentDep\")\n        }\n      }).then(res => {\n        this.tableData = res.data.list;\n        this.total = res.data.total;\n        for (let i = 0; i < this.tableData.length; i++) {\n          for (let j = 0; j < this.credit.length; j++) {\n            if (this.tableData[i].courseId == this.credit[j].id) {\n              this.tableData[i].credit = this.credit[j].credit;\n            }\n          }\n        }\n      })\n    },\n\n    // 原计划是“判断当前row中的课程是否已选修”单独作为一个方法，但函数嵌套时被调用函数的返回值无法正常传递给调用者，原因不明\n    choose(row) {\n      // 选课之前需要先判断本门课程是否已选过\n      // 有五个东西需要传到后台进行验证，学号，学期，课号，工号，时间，对它们进行封装\n      let chooseObj = {\n        \"studentId\": sessionStorage.getItem(\"currentId\"),\n        \"term\": row.term,\n        \"courseId\": row.courseId,\n        \"teacherId\": row.teacherId,\n        \"time\": row.time\n      }\n      // 去grade表中进行查询\n      request.post(\"/grade/isChosen\", chooseObj).then(res => {\n        console.log(res);\n        if (res.code !== '0') { // 不能选课\n          this.$message({\n            type: \"warning\",\n            message: res.msg\n          })\n          return;\n        } else {\n          // 创建一条grade实体（id不传，自动生成），插入到grade表中\n          let gradeObj = {\n            \"studentId\": sessionStorage.getItem(\"currentId\"),\n            \"term\": row.term,\n            \"courseId\": row.courseId,\n            \"teacherId\": row.teacherId,\n            \"time\": row.time,\n            \"usualGrade\": '0',\n            \"finalGrade\": '0',\n            \"totalGrade\": '0'\n          }\n          request.post(\"/grade\", gradeObj).then(res => {\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"选课成功\"\n              })\n              this.load();\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              })\n            }\n          })\n        }\n      })\n    },\n    getCredit() {\n      request.get(\"/course/getCredit\").then(res => {\n        console.log(res);\n        this.credit = res.data;\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}