{"ast":null,"code":"import { reactive, toRefs, nextTick, watchEffect } from 'vue';\nimport * as pdfjs from 'pdfjs-dist';\nimport { GlobalWorkerOptions, getDocument } from 'pdfjs-dist';\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport { Toast } from 'vant';\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\nexport default {\n  name: 'Pdf',\n  props: {\n    url: {\n      type: String,\n      default: 'PDF/test.pdf'\n    } // pdf文件路径\n\n  },\n\n  setup(props, {\n    emit\n  }) {\n    const state = reactive({\n      pdfCtx: null,\n      currentPageNum: 0,\n      // 当前页\n      totalPageNum: 0,\n      zoom: 10,\n      // 目前暂时采用css方式缩放页面\n      minZoom: 10,\n      // 缩放最小值 一倍\n      maxZoom: 50 // 缩放最大值 五倍\n\n    });\n\n    const resolvePdf = url => {\n      const loadingTask = pdfjs.getDocument(url);\n      loadingTask.promise.then(pdf => {\n        state.pdfCtx = pdf;\n        state.totalPageNum = pdf.numPages;\n        state.currentPageNum = 1; // 动态计算scale\n\n        pdf.getPage(1).then(res => {\n          let boxWidth = document.body.clientWidth - 20;\n          const [x1,, x2] = res._pageInfo.view;\n          const pageWidth = x2 - x1;\n          state.scale = boxWidth * (state.maxZoom / 10) / pageWidth;\n        });\n        nextTick(() => {\n          renderPdf();\n        });\n      });\n    };\n\n    const renderPdf = (num = 1) => {\n      state.pdfCtx.getPage(num).then(page => {\n        const canvas = document.getElementById(`pdf-canvas-${num}`);\n        const ctx = canvas.getContext('2d');\n        const viewport = page.getViewport({\n          scale: state.scale\n        }); // 画布大小,默认值是width:300px,height:150px\n\n        canvas.width = viewport.width;\n        canvas.height = viewport.height; // 画布的dom大小, 设置移动端,宽度设置铺满整个屏幕\n\n        const clientWidth = document.body.clientWidth - 20;\n        canvas.style.width = clientWidth + 'px'; // 根据pdf每页的宽高比例设置canvas的高度\n\n        canvas.style.height = clientWidth * (viewport.height / viewport.width) + 'px';\n        page.render({\n          canvasContext: ctx,\n          viewport\n        });\n\n        if (num < state.totalPageNum) {\n          renderPdf(num + 1);\n        } else {\n          emit('onRendered');\n          Toast.clear();\n        }\n      });\n    };\n\n    const zoomChange = value => {\n      state.zoom = value == 'plus' ? state.zoom + 5 : state.zoom - 5;\n      let pdfViewer = document.getElementsByClassName('pdf-viewer')[0];\n      let pages = document.getElementsByClassName('pdf-item');\n      pdfViewer.scrollTop = pages[state.currentPageNum - 1].offsetTop * state.zoom / 10;\n    };\n\n    const onScroll = e => {\n      let pages = document.getElementsByClassName('pdf-item');\n\n      for (let i = 0; i < state.totalPageNum; i++) {\n        let offset = e.target.offsetHeight / 2 - 100; // 距顶部的距离(当前页在滚动到页面可视区的哪个位置时更改currentPageNum)\n\n        if (e.target.scrollTop >= pages[i].offsetTop * state.zoom / 10 - offset) {\n          if (pages[i + 1] && e.target.scrollTop < pages[i + 1].offsetTop * state.zoom / 10 - offset || !pages[i + 1]) {\n            state.currentPageNum = i + 1;\n          }\n        }\n      }\n    };\n\n    watchEffect(() => {\n      if (props.url) {\n        Toast.loading({\n          message: '文件加载中...',\n          overlay: true,\n          forbidClick: true,\n          duration: 0\n        });\n        resolvePdf(props.url);\n      }\n    });\n    return { ...toRefs(state),\n      zoomChange,\n      onScroll\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","toRefs","nextTick","watchEffect","pdfjs","GlobalWorkerOptions","getDocument","pdfjsWorker","Toast","workerSrc","name","props","url","type","String","default","setup","emit","state","pdfCtx","currentPageNum","totalPageNum","zoom","minZoom","maxZoom","resolvePdf","loadingTask","promise","then","pdf","numPages","getPage","res","boxWidth","document","body","clientWidth","x1","x2","_pageInfo","view","pageWidth","scale","renderPdf","num","page","canvas","getElementById","ctx","getContext","viewport","getViewport","width","height","style","render","canvasContext","clear","zoomChange","value","pdfViewer","getElementsByClassName","pages","scrollTop","offsetTop","onScroll","e","i","offset","target","offsetHeight","loading","message","overlay","forbidClick","duration"],"sourceRoot":"","sources":["E:\\code\\springboot+vue\\class_choose_book1\\vue\\src\\components\\Pdf.vue"],"sourcesContent":["<template>\r\n  <!-- 自由发挥想象的工具栏 -->\r\n  <div class=\"tool-bar\" v-show=\"totalPageNum != 0\">\r\n    <div class=\"pageNum\">{{ currentPageNum }} / {{ totalPageNum }}页</div>\r\n    <span class=\"txt\">放大</span>\r\n    <div class=\"box\">\r\n      <div class=\"mask\" v-show=\"zoom == maxZoom\"></div>\r\n      <van-icon name=\"plus\" size=\"18\" @click=\"zoomChange('plus')\"/>\r\n    </div>\r\n    <span class=\"txt\">缩小</span>\r\n    <div class=\"box\">\r\n      <div class=\"mask\" v-show=\"zoom == minZoom\"></div>\r\n      <van-icon name=\"minus\" size=\"18\" @click=\"zoomChange('minus')\"/>\r\n    </div>\r\n  </div>\r\n  <!-- 工具栏 end -->\r\n\r\n  <div class=\"pdf-viewer\" @scroll=\"onScroll\">\r\n    <template v-for=\"item in totalPageNum\" :key=\"item\">\r\n      <canvas class=\"pdf-item\" :id=\"`pdf-canvas-${item}`\" :style=\"{zoom: zoom/10}\"/>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive, toRefs, nextTick, watchEffect} from 'vue'\r\nimport * as pdfjs from 'pdfjs-dist'\r\nimport {GlobalWorkerOptions, getDocument} from 'pdfjs-dist'\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport {Toast} from 'vant'\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nexport default {\r\n  name: 'Pdf',\r\n  props: {\r\n    url: {type: String, default: 'PDF/test.pdf'} // pdf文件路径\r\n  },\r\n  setup(props, {emit}) {\r\n    const state = reactive({\r\n      pdfCtx: null,\r\n\r\n      currentPageNum: 0, // 当前页\r\n      totalPageNum: 0,\r\n      zoom: 10, // 目前暂时采用css方式缩放页面\r\n      minZoom: 10, // 缩放最小值 一倍\r\n      maxZoom: 50, // 缩放最大值 五倍\r\n    })\r\n\r\n    const resolvePdf = (url) => {\r\n      const loadingTask = pdfjs.getDocument(url)\r\n      loadingTask.promise.then(pdf => {\r\n        state.pdfCtx = pdf\r\n        state.totalPageNum = pdf.numPages\r\n        state.currentPageNum = 1\r\n\r\n        // 动态计算scale\r\n        pdf.getPage(1).then(res => {\r\n          let boxWidth = document.body.clientWidth - 20\r\n          const [x1, , x2] = res._pageInfo.view;\r\n          const pageWidth = x2 - x1;\r\n          state.scale = boxWidth * (state.maxZoom / 10) / pageWidth\r\n        })\r\n        nextTick(() => {\r\n          renderPdf()\r\n        })\r\n      })\r\n    }\r\n\r\n    const renderPdf = (num = 1) => {\r\n      state.pdfCtx.getPage(num).then(page => {\r\n        const canvas = document.getElementById(`pdf-canvas-${num}`)\r\n        const ctx = canvas.getContext('2d')\r\n        const viewport = page.getViewport({scale: state.scale})\r\n        // 画布大小,默认值是width:300px,height:150px\r\n        canvas.width = viewport.width\r\n        canvas.height = viewport.height\r\n        // 画布的dom大小, 设置移动端,宽度设置铺满整个屏幕\r\n        const clientWidth = document.body.clientWidth - 20\r\n        canvas.style.width = clientWidth + 'px'\r\n        // 根据pdf每页的宽高比例设置canvas的高度\r\n        canvas.style.height = clientWidth * (viewport.height / viewport.width) + 'px'\r\n        page.render({\r\n          canvasContext: ctx,\r\n          viewport\r\n        })\r\n        if (num < state.totalPageNum) {\r\n          renderPdf(num + 1)\r\n        } else {\r\n          emit('onRendered')\r\n          Toast.clear();\r\n        }\r\n      })\r\n    }\r\n\r\n    const zoomChange = (value) => {\r\n      state.zoom = value == 'plus' ? state.zoom + 5 : state.zoom - 5\r\n\r\n      let pdfViewer = document.getElementsByClassName('pdf-viewer')[0]\r\n      let pages = document.getElementsByClassName('pdf-item')\r\n      pdfViewer.scrollTop = pages[state.currentPageNum - 1].offsetTop * state.zoom / 10\r\n    }\r\n\r\n    const onScroll = (e) => {\r\n      let pages = document.getElementsByClassName('pdf-item')\r\n      for (let i = 0; i < state.totalPageNum; i++) {\r\n        let offset = e.target.offsetHeight / 2 - 100 // 距顶部的距离(当前页在滚动到页面可视区的哪个位置时更改currentPageNum)\r\n        if (e.target.scrollTop >= pages[i].offsetTop * state.zoom / 10 - offset) {\r\n          if ((pages[i + 1] && e.target.scrollTop < pages[i + 1].offsetTop * state.zoom / 10 - offset) || !pages[i + 1]) {\r\n            state.currentPageNum = i + 1\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    watchEffect(() => {\r\n      if (props.url) {\r\n        Toast.loading({\r\n          message: '文件加载中...',\r\n          overlay: true,\r\n          forbidClick: true,\r\n          duration: 0,\r\n        });\r\n\r\n        resolvePdf(props.url)\r\n      }\r\n    })\r\n    return {\r\n      ...toRefs(state),\r\n      zoomChange,\r\n      onScroll\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.pdf-viewer {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 10px 10px 50px;\r\n  overflow: scroll;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n/*//放飞自我的工具栏*/\r\n.tool-bar {\r\n  z-index: 2;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 45px;\r\n  line-height: 45px;\r\n  color: #fff;\r\n  padding: 0 20px;\r\n  background-color: rgba(85, 85, 85, 0.6);\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n.pageNum {\r\n  flex: 1;\r\n  font-size: 17px;\r\n}\r\n\r\n.txt {\r\n  font-size: 16px;\r\n  padding-right: 5px;\r\n  margin-left: 20px;\r\n}\r\n\r\n.box {\r\n  position: relative;\r\n  margin-top: 5px;\r\n  width: 35px;\r\n  height: 35px;\r\n  line-height: 35px;\r\n  text-align: center;\r\n  background-color: #3476FE;\r\n  border-radius: 50%;\r\n}\r\n.van-icon {\r\n  vertical-align: middle;\r\n  font-weight: bold;\r\n}\r\n\r\n.mask {\r\n  z-index: 1;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(109, 109, 109, .7);\r\n  border-radius: 50%;\r\n}\r\n\r\n\r\n/*// 工具栏 end*/\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}