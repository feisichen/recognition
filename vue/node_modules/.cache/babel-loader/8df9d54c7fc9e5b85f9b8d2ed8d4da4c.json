{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"el-upload__text\"\n}, [/*#__PURE__*/_createTextVNode(\" 拖到这里 /\"), /*#__PURE__*/_createElementVNode(\"em\", null, \"点击上传\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"el-upload__tip\"\n}, \" jpg/png files with a size less than 500kb \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bg\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Plus = _resolveComponent(\"Plus\");\n\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newClass = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.newClass]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addClass && $options.addClass(...args))\n  }, \"Add Class\"), _hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.classes, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(item.name), 1\n    /* TEXT */\n    ), _createVNode(_component_el_upload, {\n      class: \"upload-demo\",\n      drag: \"\",\n      action: \"http://localhost:9090/file/upload\",\n      \"on-success\": $options.handleAvatarSuccess(index),\n      \"list-type\": \"picture\",\n      multiple: \"\",\n      data: {\n        ClassName: item.name,\n        User: $options.getUser(),\n        imageIndex: $options.getImageIndex(index)\n      }\n    }, {\n      tip: _withCtx(() => [_hoisted_3]),\n      default: _withCtx(() => [_createVNode(_component_el_icon, {\n        class: \"el-icon--upload\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_Plus)]),\n        _: 1\n        /* STABLE */\n\n      }), _hoisted_2]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"on-success\", \"data\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_4], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","type","$data","$event","onClick","$options","_hoisted_1","_createElementBlock","_Fragment","_renderList","item","index","key","_toDisplayString","name","_createVNode","_component_el_upload","drag","action","multiple","data","ClassName","User","imageIndex","tip","_hoisted_3","_component_el_icon","_component_Plus","_hoisted_2","_hoisted_4"],"sourceRoot":"","sources":["D:\\code\\Java\\image_recognition\\vue\\src\\views\\Recognition.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"text\" v-model=\"newClass\">\r\n    <button @click=\"addClass\">Add Class</button>\r\n    <hr>\r\n    <div v-for=\"(item, index) in classes\" :key=\"index\">\r\n      <h3>{{ item.name }}</h3>\r\n      <el-upload\r\n          class=\"upload-demo\"\r\n          drag\r\n          action=\"http://localhost:9090/file/upload\"\r\n          :on-success=\"handleAvatarSuccess(index)\"\r\n          list-type=\"picture\"\r\n          multiple\r\n          :data=\"{ ClassName: item.name, User:getUser(), imageIndex: getImageIndex(index) }\"\r\n      >\r\n        <el-icon class=\"el-icon--upload\"><Plus/></el-icon>\r\n        <div class=\"el-upload__text\">\r\n          拖到这里 /<em>点击上传</em>\r\n        </div>\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\">\r\n            jpg/png files with a size less than 500kb\r\n          </div>\r\n        </template>\r\n      </el-upload>\r\n    </div>\r\n  </div>\r\n  <div class=\"bg\"></div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport {Plus} from '@element-plus/icons-vue';\r\nimport request from \"@/utils/request\";\r\nimport { filesaver } from 'file-saver';\r\n\r\nexport default {\r\n  name: \"recognition\",\r\n  components: {Plus},\r\n  data() {\r\n    return {\r\n      classes: [],\r\n      newClass: '',\r\n      imageCounts: [],\r\n      url: \"\",\r\n      path:'',\r\n      deskpath:'',\r\n      word:[],\r\n      number:1,\r\n      downloadTxtButtonFlag:0,\r\n    }\r\n  },\r\n  methods:{\r\n    // downloadTxt() {\r\n    //   let str = this.word;\r\n    //   let strData = new Blob([str], { type: 'text/plain;charset=utf-8' });\r\n    //   saveAs(strData, \"翻译文件.txt\");\r\n    // },\r\n    addClass() {\r\n      if (this.newClass !== '') {\r\n        this.classes.push({\r\n          name: this.newClass\r\n        });\r\n        this.imageCounts.push(1);\r\n        request.get(\"/file/mkcls\", {\r\n          params: {\r\n            user:sessionStorage.getItem(\"currentId\"),\r\n            newclass:this.newClass\r\n          }\r\n        }).then(res => {\r\n        })\r\n        this.newClass = '';\r\n      }\r\n    },\r\n    // upload() {\r\n    //   console.log(this.deskpath)\r\n    //   request.get(\"/book/recognize\", {\r\n    //     params: {\r\n    //       path:this.deskpath\r\n    //     }\r\n    //   }).then(res => {\r\n    //     console.log(res);\r\n    //\r\n    //     if (res.code === '0') {\r\n    //       this.$message({\r\n    //         type: \"success\",\r\n    //         message: \"上传成功\"\r\n    //       })\r\n    //       console.log(res.data[9])\r\n    //       this.word = this.word  +'['+ this.number+']:';\r\n    //       this.word = this.word  + res.data;\r\n    //       this.word = this.word  +'\\n';\r\n    //       this.number++;\r\n    //       this.downloadTxtButtonFlag = 1;\r\n    //\r\n    //     } else {\r\n    //       this.$message({\r\n    //         type: \"warning\",\r\n    //         message: res.msg\r\n    //       })\r\n    //     }\r\n    //   })\r\n    // },\r\n    getImageIndex(index) {\r\n      // 返回当前类别已上传的图片数量\r\n      return this.imageCounts[index]\r\n    },\r\n    getUser() {\r\n      // 返回当前类别已上传的图片数量\r\n      return sessionStorage.getItem(\"currentId\")\r\n    },\r\n    handleAvatarSuccess(index)\r\n    {\r\n      this.imageCounts[index]++\r\n      // console.log(this.url);\r\n      // this.url = res;\r\n      // this.path = this.url.split('/');\r\n      // // console.log(this.path)\r\n      // this.deskpath = 'D:/code/springboot+vue/image_recognition/vue/public/image/' + sessionStorage.getItem(\"currentId\");\r\n      // console.log(this.deskpath);\r\n      // this.upload();\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.upcard{\r\n  align-content: center;\r\n  background-color: wheat;\r\n  width: 85%;\r\n  min-height: 550px;\r\n  height: 100%;\r\n  opacity: 0.8;\r\n  border-radius: 30px;\r\n  margin: 50px 0 60px 60px;\r\n\r\n\r\n  /* 为其整体设置接近透明的效果*/\r\n  background-color: #ffffff;\r\n  /* 设置box-shadow使其有立体感 */\r\n  /*box-shadow: 5px 5px 0 0 rgba(0, 0, 0, 1);*/\r\n\r\n  padding: 0 50px;\r\n}\r\n.bg {\r\n  width: 100%;\r\n  height: 580px;\r\n  background-color: #ffffff;\r\n  position: absolute;\r\n  margin-top: 58px;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  background-size: 100% 522px;\r\n  min-width: 1000px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}