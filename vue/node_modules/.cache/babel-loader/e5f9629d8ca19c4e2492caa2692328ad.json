{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"box\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"front\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"back\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" /* box为整个页面展示区 */ \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" /* page有前后两面 */ \"), _createElementVNode(\"div\", {\n    class: \"page\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.togoleRegister(true))\n  }, _hoisted_4), _createCommentVNode(\" /* page2为翻页之后显示的*/ \"), _createElementVNode(\"div\", {\n    class: \"page2\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.togoleRegister(false))\n  })])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;AASOA,IAAE,EAAC;;;gCAGJC,oBAAyB,KAAzB,EAAyB;AAApBC,OAAK,EAAC;AAAc,CAAzB,EAAkB,IAAlB,EAAkB;AAAA;AAAlB;;gCACAD,oBAAwB,KAAxB,EAAwB;AAAnBC,OAAK,EAAC;AAAa,CAAxB,EAAiB,IAAjB,EAAiB;AAAA;AAAjB;;oBADAC,YACAC;;6DALJC,4CACAJ,oBAQM,KARN,cAQM,CAPJI,wCAOI,EANJJ,oBAGM,KAHN,EAGM;AAHDC,SAAK,EAAC,MAGL;AAHaI,WAAK,sCAAEC,oBAAc,IAAd,CAAF;AAGlB,GAHN,aAMI,EAFJF,2CAEI,EADJJ,oBAAwD,KAAxD,EAAwD;AAAnDC,SAAK,EAAC,OAA6C;AAApCI,WAAK,sCAAEC,oBAAc,KAAd,CAAF;AAA+B,GAAxD,CACI,CARN","names":["id","_createElementVNode","class","_hoisted_2","_hoisted_3","_createCommentVNode","onClick","_ctx"],"sourceRoot":"","sources":["E:\\code\\springboot+vue\\class_choose_book1\\vue\\src\\views\\Read.vue"],"sourcesContent":["<!--<template>-->\r\n<!--&lt;!&ndash;    <div class=\"home\">&ndash;&gt;-->\r\n<!--&lt;!&ndash;      <button @click=\"changePage\">翻页</button>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      <flipPage ref=\"thePage\" :data=\"data\" :width=\"pWidth\" :height=\"pHeight\"></flipPage>&ndash;&gt;-->\r\n<!--&lt;!&ndash;    </div>&ndash;&gt;-->\r\n<!--  <div>这里是第{{id}}本书的内容</div>-->\r\n<!--</template>-->\r\n<template>\r\n  <!-- /* box为整个页面展示区 */ -->\r\n  <div id=\"box\" >\r\n    <!-- /* page有前后两面 */ -->\r\n    <div class=\"page\" @click=\"togoleRegister(true)\">\r\n      <div class=\"front\"></div>\r\n      <div class=\"back\"></div>\r\n    </div>\r\n    <!-- /* page2为翻页之后显示的*/ -->\r\n    <div class=\"page2\" @click=\"togoleRegister(false)\"></div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport flipPage from \"vue-flip-page\";\r\nexport default{\r\n  name: \"read\",\r\n  components: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      id: sessionStorage.getItem(\"id\"),\r\n      tableData: [],\r\n      search: '',\r\n      // 用于录入平时成绩和期末成绩暂存当前字段\r\n      row: {},\r\n      pWidth: 400,\r\n      pHeight: 500,\r\n      currentIndex: 0,\r\n      data: [\r\n        {\r\n          picture_image: require('@/image/bookcover/102.jpg'),\r\n        },\r\n        {\r\n          picture_image: require('@/image/bookcover/102.jpg'),\r\n        },\r\n      ],\r\n    }\r\n  },\r\n}\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}