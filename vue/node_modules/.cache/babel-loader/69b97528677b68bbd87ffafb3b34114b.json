{"ast":null,"code":"// 引入组件\nimport VuePdfEmbed from \"vue-pdf-embed\";\n\nconst PDF = require('pdfjs-dist'); // 页面报错解决，在将 pdfjs-dist/build/pdf.worker.js 复制一份放到项目 public 目录下后引入\n\n\nPDF.GlobalWorkerOptions.workerSrc = '/pdf.worker.js'; // 引入文件\n\nimport pdfUrl from '@/assets/file/example.pdf';\nexport default {\n  components: {\n    VuePdfEmbed\n  },\n\n  data() {\n    return {\n      source: pdfUrl,\n      // 文件路径\n      pageNum: 1,\n      // 当前页数\n      scale: 1,\n      // 缩放比例\n      numPages: 0 // 总页数\n\n    };\n  },\n\n  mounted() {\n    // 获取总页数\n    this.getPdfNumPages();\n  },\n\n  computed: {\n    scaleFun(index) {\n      // 缩放\n      var scale = this.scale;\n      return `transform:scale(${scale})`;\n    }\n\n  },\n  methods: {\n    getPdfNumPages() {\n      const url = this.source;\n      const loadingTask = PDFJS.getDocument(url);\n      loadingTask.promise.then(pdf => {\n        this.numPages = pdf.numPages;\n      });\n    },\n\n    prev() {\n      if (this.pageNum > 1) {\n        this.pageNum -= 1;\n      }\n    },\n\n    next() {\n      if (this.pageNum < this.numPages) {\n        this.pageNum += 1;\n      }\n    },\n\n    zoomA() {\n      this.scale += 0.1;\n    },\n\n    zoomB() {\n      this.scale -= 0.1;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AACA;AACA,OAAOA,WAAP,MAAwB,eAAxB;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB,C,CACA;;;AACAD,GAAG,CAACE,mBAAJ,CAAwBC,SAAxB,GAAoC,gBAApC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,eAAe;AACbC,EAAAA,UAAU,EAAE;AACVN,IAAAA;AADU,GADC;;AAIbO,EAAAA,IAAI,GAAG;AACL,WAAO;AACLC,MAAAA,MAAM,EAAEH,MADH;AACW;AAChBI,MAAAA,OAAO,EAAE,CAFJ;AAEO;AACZC,MAAAA,KAAK,EAAE,CAHF;AAGM;AACXC,MAAAA,QAAQ,EAAE,CAJL,CAIQ;;AAJR,KAAP;AAMD,GAXY;;AAYbC,EAAAA,OAAO,GAAG;AACR;AACA,SAAKC,cAAL;AACD,GAfY;;AAgBbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQ;AAAE;AAChB,UAAIN,KAAK,GAAG,KAAKA,KAAjB;AACA,aAAQ,mBAAkBA,KAAM,GAAhC;AACD;;AAJO,GAhBG;AAsBbO,EAAAA,OAAO,EAAE;AACPJ,IAAAA,cAAc,GAAG;AACf,YAAMK,GAAG,GAAG,KAAKV,MAAjB;AACA,YAAMW,WAAW,GAAGC,KAAK,CAACC,WAAN,CAAkBH,GAAlB,CAApB;AACAC,MAAAA,WAAW,CAACG,OAAZ,CAAoBC,IAApB,CAAyBC,GAAG,IAAI;AAC9B,aAAKb,QAAL,GAAgBa,GAAG,CAACb,QAApB;AACD,OAFD;AAGD,KAPM;;AAQPc,IAAAA,IAAI,GAAG;AACL,UAAI,KAAKhB,OAAL,GAAe,CAAnB,EAAsB;AACpB,aAAKA,OAAL,IAAgB,CAAhB;AACD;AACF,KAZM;;AAaPiB,IAAAA,IAAI,GAAG;AACL,UAAI,KAAKjB,OAAL,GAAe,KAAKE,QAAxB,EAAkC;AAChC,aAAKF,OAAL,IAAgB,CAAhB;AACD;AACF,KAjBM;;AAkBPkB,IAAAA,KAAK,GAAG;AACN,WAAKjB,KAAL,IAAc,GAAd;AACD,KApBM;;AAqBPkB,IAAAA,KAAK,GAAG;AACN,WAAKlB,KAAL,IAAc,GAAd;AACD;;AAvBM;AAtBI,CAAf","names":["VuePdfEmbed","PDF","require","GlobalWorkerOptions","workerSrc","pdfUrl","components","data","source","pageNum","scale","numPages","mounted","getPdfNumPages","computed","scaleFun","index","methods","url","loadingTask","PDFJS","getDocument","promise","then","pdf","prev","next","zoomA","zoomB"],"sourceRoot":"","sources":["E:\\code\\springboot+vue\\class_choose_book1\\vue\\src\\views\\Read.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"div\">\r\n      <p class=\"arrow\" style=\"text-align:center\">\r\n        <!-- // 上一页 -->\r\n        <van-tag color=\"#7232dd\" plain @click=\"prev\">上一页</van-tag>\r\n        {{pageNum}} / {{numPages}}\r\n        <!-- // 下一页 -->\r\n        <van-tag color=\"#7232dd\" @click=\"next\" style=\"margin-left: 5px\">下一页</van-tag>\r\n\t    </p>\r\n\t    <p style=\"text-align:center\">\r\n        <van-tag color=\"#7232dd\" plain @click=\"zoomA\">放大</van-tag>\r\n        <van-tag color=\"#7232dd\" @click=\"zoomB\" style=\"margin-left: 5px\">缩小</van-tag>\r\n      </p>\r\n    </div>\r\n    <vue-pdf-embed :source=\"source\"\r\n                   class=\"vue-pdf-embed\"\r\n                   :style=\"scaleFun\"\r\n                   :page=\"pageNum\" />\r\n  </div>\r\n</template>\r\n<style scoped>\r\n.div {\r\n  top: 0;\r\n  position: fixed;\r\n  z-index: 999;\r\n}\r\n.vue-pdf-embed {\r\n  text-align: center;\r\n}\r\n</style>\r\n\r\n\r\n\r\n<script>\r\n// 引入组件\r\nimport VuePdfEmbed from \"vue-pdf-embed\";\r\nconst PDF = require('pdfjs-dist')\r\n// 页面报错解决，在将 pdfjs-dist/build/pdf.worker.js 复制一份放到项目 public 目录下后引入\r\nPDF.GlobalWorkerOptions.workerSrc = '/pdf.worker.js'\r\n// 引入文件\r\nimport pdfUrl from '@/assets/file/example.pdf'\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed,\r\n  },\r\n  data() {\r\n    return {\r\n      source: pdfUrl, // 文件路径\r\n      pageNum: 1, // 当前页数\r\n      scale: 1,  // 缩放比例\r\n      numPages: 0, // 总页数\r\n    };\r\n  },\r\n  mounted() {\r\n    // 获取总页数\r\n    this.getPdfNumPages()\r\n  },\r\n  computed: {\r\n    scaleFun(index) { // 缩放\r\n      var scale = this.scale;\r\n      return `transform:scale(${scale})`;\r\n    },\r\n  },\r\n  methods: {\r\n    getPdfNumPages() {\r\n      const url = this.source\r\n      const loadingTask = PDFJS.getDocument(url)\r\n      loadingTask.promise.then(pdf => {\r\n        this.numPages = pdf.numPages\r\n      })\r\n    },\r\n    prev() {\r\n      if (this.pageNum > 1) {\r\n        this.pageNum -= 1;\r\n      }\r\n    },\r\n    next() {\r\n      if (this.pageNum < this.numPages) {\r\n        this.pageNum += 1;\r\n      }\r\n    },\r\n    zoomA() {\r\n      this.scale += 0.1;\r\n    },\r\n    zoomB() {\r\n      this.scale -= 0.1;\r\n    },\r\n  },\r\n};\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}