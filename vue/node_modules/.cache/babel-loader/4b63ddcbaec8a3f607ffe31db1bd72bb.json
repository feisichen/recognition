{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5752faac\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"files-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"upload-title\"\n};\nconst _hoisted_3 = {\n  class: \"upload-btn-group\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"上传文件\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"上传文件夹\");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"批量下载\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"批量删除\");\n\nconst _hoisted_8 = {\n  class: \"drog_list\"\n};\nconst _hoisted_9 = {\n  class: \"file-title\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title\"\n}, \"文件列表\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = {\n  class: \"operate\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-close\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = {\n  class: \"file-list\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"no-file\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"iconfont icon-empty-file\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = /*#__PURE__*/_createTextVNode(\" 暂无待上传文件 \");\n\nconst _hoisted_17 = [_hoisted_15, _hoisted_16];\nconst _hoisted_18 = {\n  class: \"file-group\"\n};\nconst _hoisted_19 = [\"onDblclick\"];\nconst _hoisted_20 = [\"src\"];\nconst _hoisted_21 = {\n  key: 0,\n  class: \"el-icon-check\"\n};\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_uploader_unsupport = _resolveComponent(\"uploader-unsupport\");\n\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n\n  const _component_uploader_btn = _resolveComponent(\"uploader-btn\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n\n  const _component_uploader_file = _resolveComponent(\"uploader-file\");\n\n  const _component_uploader_list = _resolveComponent(\"uploader-list\");\n\n  const _component_uploader_drop = _resolveComponent(\"uploader-drop\");\n\n  const _component_uploader = _resolveComponent(\"uploader\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 分布式上传文件列表 \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_uploader, {\n    ref: \"uploader\",\n    options: $data.options,\n    \"auto-start\": false,\n    \"file-status-text\": $data.fileStatusText,\n    class: \"uploader-example\",\n    onCatchAll: $options.onCatchAll,\n    onUploadStart: $options.onUploadStart,\n    onFileAdded: $options.onFileAdded,\n    onFilesAdded: $options.onFilesAdded,\n    onFileComplete: $options.fileComplete,\n    onFilesSubmitted: $options.filesSubmitted,\n    onFileSuccess: _cache[1] || (_cache[1] = (rootFile, file, message) => $options.onFileSuccess(rootFile, file, message)),\n    onFileRemoved: $options.onFileRemoved,\n    onFileError: $options.onFileError,\n    onComplete: $options.complete\n  }, {\n    default: _withCtx(() => [_createVNode(_component_uploader_unsupport), _createVNode(_component_uploader_drop, null, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_breadcrumb, {\n        \"separator-class\": \"el-icon-arrow-right\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.menuItem, (item, index) => {\n          return _openBlock(), _createBlock(_component_el_breadcrumb_item, {\n            onClick: $event => $options.breadcrumb(item.path + '/'),\n            class: \"breadcrumb-item\",\n            key: index\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1\n            /* TEXT */\n            )]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"onClick\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_uploader_btn, {\n        class: \"uploader-upload-btn\"\n      }, {\n        default: _withCtx(() => [_hoisted_4]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_uploader_btn, {\n        class: \"uploader-upload-btn\",\n        directory: true\n      }, {\n        default: _withCtx(() => [_hoisted_5]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_tooltip, {\n        effect: \"dark\",\n        content: \"下载文件缓慢时：请更换网络，或分次下载\",\n        placement: \"bottom\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          size: \"small\",\n          onClick: $options.downloadAll\n        }, {\n          default: _withCtx(() => [_hoisted_6]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createCommentVNode(\" <el-button type=\\\"primary\\\" size=\\\"small\\\" @click=\\\"downloadAll\\\">批量下载</el-button> \"), _createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $options.deleteAll\n      }, {\n        default: _withCtx(() => [_hoisted_7]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])])]), _withDirectives(_createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_uploader_list, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", {\n          \"slot-scope\": \"props\",\n          class: _normalizeClass([\"file-panel\", {\n            collapse: $data.collapse\n          }])\n        }, [_createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_el_button, {\n          type: \"text\",\n          title: $data.collapse ? '展开' : '折叠',\n          onClick: _cache[0] || (_cache[0] = $event => $data.collapse = !$data.collapse)\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"i\", {\n            class: _normalizeClass($data.collapse ? 'el-icon-full-screen' : 'el-icon-minus')\n          }, null, 2\n          /* CLASS */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"title\"]), _createVNode(_component_el_button, {\n          type: \"text\",\n          title: \"关闭\",\n          onClick: $options.closeFilesUploadList\n        }, {\n          default: _withCtx(() => [_hoisted_12]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])])]), _createElementVNode(\"ul\", _hoisted_13, [_createCommentVNode(\" <div> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.props.fileList, (file, i) => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: i,\n            class: \"file-info\"\n          }, [_createVNode(_component_uploader_file, {\n            list: true,\n            file: file\n          }, null, 8\n          /* PROPS */\n          , [\"file\"]), _createElementVNode(\"span\", null, _toDisplayString($options.timeConversion(file._lastProgressCallback)), 1\n          /* TEXT */\n          )]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        )), !_ctx.props.fileList.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _hoisted_17)) : _createCommentVNode(\"v-if\", true)])], 2\n        /* CLASS */\n        )]),\n        _: 1\n        /* STABLE */\n\n      })], 512\n      /* NEED_PATCH */\n      ), [[_vShow, $data.isShowDropUploadFileLists]]), _createElementVNode(\"ul\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dataList, (item, index) => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: index,\n          class: _normalizeClass([item['active'] ? 'file-item-active' : 'file-item']),\n          onDblclick: $event => $options.openFolder(item)\n        }, [_createElementVNode(\"img\", {\n          src: $options.getImageUrl(item.isDir),\n          class: _normalizeClass(item.isDir ? 'folderIcon' : 'fileIcon')\n        }, null, 10\n        /* CLASS, PROPS */\n        , _hoisted_20), _createVNode(_component_el_tooltip, {\n          effect: \"dark\",\n          content: item.fileName,\n          placement: \"bottom\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(item.fileName), 1\n          /* TEXT */\n          )]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1032\n        /* PROPS, DYNAMIC_SLOTS */\n        , [\"content\"]), item['active'] ? (_openBlock(), _createElementBlock(\"i\", _hoisted_21)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_tooltip, {\n          effect: \"dark\",\n          content: \"下载文件缓慢时：请更换网络，或分次下载\",\n          placement: \"right\"\n        }, {\n          default: _withCtx(() => [$data.showDownIcon ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: \"download-btn\",\n            onClick: $event => $options.handleDownload(item)\n          }, null, 8\n          /* PROPS */\n          , _hoisted_22)) : _createCommentVNode(\"v-if\", true)]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        ), item.fileName !== 'coms_01' && item.fileName !== 'coms_02' ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: \"remove-btn\",\n          onClick: $event => $options.handleRemove(item.objectName, item.size, item)\n        }, null, 8\n        /* PROPS */\n        , _hoisted_23)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n          class: \"file-mask\",\n          onClick: $event => $options.selectFiles(item, index)\n        }, null, 8\n        /* PROPS */\n        , _hoisted_24)], 42\n        /* CLASS, PROPS, HYDRATE_EVENTS */\n        , _hoisted_19);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"options\", \"file-status-text\", \"onCatchAll\", \"onUploadStart\", \"onFileAdded\", \"onFilesAdded\", \"onFileComplete\", \"onFilesSubmitted\", \"onFileRemoved\", \"onFileError\", \"onComplete\"])])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"AAAA,SAASA,kBAAkB,IAAIC,mBAA/B,EAAoDC,gBAAgB,IAAIC,iBAAxE,EAA2FC,WAAW,IAAIC,YAA1G,EAAwHC,UAAU,IAAIC,WAAtI,EAAmJC,QAAQ,IAAIC,SAA/J,EAA0KC,SAAS,IAAIC,UAAvL,EAAmMC,kBAAkB,IAAIC,mBAAzN,EAA8OC,eAAe,IAAIC,gBAAjQ,EAAmRC,eAAe,IAAIC,gBAAtS,EAAwTC,OAAO,IAAIC,QAAnU,EAA6UC,WAAW,IAAIC,YAA5V,EAA0WC,kBAAkB,IAAIC,mBAAhY,EAAqZC,cAAc,IAAIC,eAAva,EAAwbC,KAAK,IAAIC,MAAjc,EAAycC,cAAc,IAAIC,eAA3d,EAA4eC,WAAW,IAAIC,YAA3f,EAAygBC,UAAU,IAAIC,WAAvhB,QAA0iB,KAA1iB;;AAEA,MAAMC,YAAY,GAAGC,CAAC,KAAKJ,YAAY,CAAC,iBAAD,CAAZ,EAAgCI,CAAC,GAACA,CAAC,EAAnC,EAAsCF,WAAW,EAAjD,EAAoDE,CAAzD,CAAtB;;AACA,MAAMC,UAAU,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAnB;AACA,MAAMC,UAAU,GAAG;AAAED,EAAAA,KAAK,EAAE;AAAT,CAAnB;AACA,MAAME,UAAU,GAAG;AAAEF,EAAAA,KAAK,EAAE;AAAT,CAAnB;;AACA,MAAMG,UAAU,GAAG,aAAavB,gBAAgB,CAAC,MAAD,CAAhD;;AACA,MAAMwB,UAAU,GAAG,aAAaxB,gBAAgB,CAAC,OAAD,CAAhD;;AACA,MAAMyB,UAAU,GAAG,aAAazB,gBAAgB,CAAC,MAAD,CAAhD;;AACA,MAAM0B,UAAU,GAAG,aAAa1B,gBAAgB,CAAC,MAAD,CAAhD;;AACA,MAAM2B,UAAU,GAAG;AAAEP,EAAAA,KAAK,EAAE;AAAT,CAAnB;AACA,MAAMQ,UAAU,GAAG;AAAER,EAAAA,KAAK,EAAE;AAAT,CAAnB;;AACA,MAAMS,WAAW,GAAG,aAAcZ,YAAY,CAAC,MAAM,aAAaX,mBAAmB,CAAC,KAAD,EAAQ;AAAEc,EAAAA,KAAK,EAAE;AAAT,CAAR,EAA4B,MAA5B,EAAoC,CAAC;AAAE;AAAvC,CAAvC,CAA9C;;AACA,MAAMU,WAAW,GAAG;AAAEV,EAAAA,KAAK,EAAE;AAAT,CAApB;;AACA,MAAMW,WAAW,GAAG,aAAcd,YAAY,CAAC,MAAM,aAAaX,mBAAmB,CAAC,GAAD,EAAM;AAAEc,EAAAA,KAAK,EAAE;AAAT,CAAN,EAAkC,IAAlC,EAAwC,CAAC;AAAE;AAA3C,CAAvC,CAA9C;;AACA,MAAMY,WAAW,GAAG;AAAEZ,EAAAA,KAAK,EAAE;AAAT,CAApB;AACA,MAAMa,WAAW,GAAG;AAClBC,EAAAA,GAAG,EAAE,CADa;AAElBd,EAAAA,KAAK,EAAE;AAFW,CAApB;;AAIA,MAAMe,WAAW,GAAG,aAAclB,YAAY,CAAC,MAAM,aAAaX,mBAAmB,CAAC,GAAD,EAAM;AAAEc,EAAAA,KAAK,EAAE;AAAT,CAAN,EAA6C,IAA7C,EAAmD,CAAC;AAAE;AAAtD,CAAvC,CAA9C;;AACA,MAAMgB,WAAW,GAAG,aAAapC,gBAAgB,CAAC,WAAD,CAAjD;;AACA,MAAMqC,WAAW,GAAG,CAClBF,WADkB,EAElBC,WAFkB,CAApB;AAIA,MAAME,WAAW,GAAG;AAAElB,EAAAA,KAAK,EAAE;AAAT,CAApB;AACA,MAAMmB,WAAW,GAAG,CAAC,YAAD,CAApB;AACA,MAAMC,WAAW,GAAG,CAAC,KAAD,CAApB;AACA,MAAMC,WAAW,GAAG;AAClBP,EAAAA,GAAG,EAAE,CADa;AAElBd,EAAAA,KAAK,EAAE;AAFW,CAApB;AAIA,MAAMsB,WAAW,GAAG,CAAC,SAAD,CAApB;AACA,MAAMC,WAAW,GAAG,CAAC,SAAD,CAApB;AACA,MAAMC,WAAW,GAAG,CAAC,SAAD,CAApB;AAEA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8CC,KAA9C,EAAqDC,QAArD,EAA+D;AACpE,QAAMC,6BAA6B,GAAGlE,iBAAiB,CAAC,oBAAD,CAAvD;;AACA,QAAMmE,6BAA6B,GAAGnE,iBAAiB,CAAC,oBAAD,CAAvD;;AACA,QAAMoE,wBAAwB,GAAGpE,iBAAiB,CAAC,eAAD,CAAlD;;AACA,QAAMqE,uBAAuB,GAAGrE,iBAAiB,CAAC,cAAD,CAAjD;;AACA,QAAMsE,oBAAoB,GAAGtE,iBAAiB,CAAC,WAAD,CAA9C;;AACA,QAAMuE,qBAAqB,GAAGvE,iBAAiB,CAAC,YAAD,CAA/C;;AACA,QAAMwE,wBAAwB,GAAGxE,iBAAiB,CAAC,eAAD,CAAlD;;AACA,QAAMyE,wBAAwB,GAAGzE,iBAAiB,CAAC,eAAD,CAAlD;;AACA,QAAM0E,wBAAwB,GAAG1E,iBAAiB,CAAC,eAAD,CAAlD;;AACA,QAAM2E,mBAAmB,GAAG3E,iBAAiB,CAAC,UAAD,CAA7C;;AAEA,SAAQQ,UAAU,IAAIE,mBAAmB,CAACJ,SAAD,EAAY,IAAZ,EAAkB,CACzDR,mBAAmB,CAAC,aAAD,CADsC,EAEzDsB,mBAAmB,CAAC,KAAD,EAAQa,UAAR,EAAoB,CACrC/B,YAAY,CAACyE,mBAAD,EAAsB;AAChCC,IAAAA,GAAG,EAAE,UAD2B;AAEhCC,IAAAA,OAAO,EAAEb,KAAK,CAACa,OAFiB;AAGhC,kBAAc,KAHkB;AAIhC,wBAAoBb,KAAK,CAACc,cAJM;AAKhC5C,IAAAA,KAAK,EAAE,kBALyB;AAMhC6C,IAAAA,UAAU,EAAEd,QAAQ,CAACc,UANW;AAOhCC,IAAAA,aAAa,EAAEf,QAAQ,CAACe,aAPQ;AAQhCC,IAAAA,WAAW,EAAEhB,QAAQ,CAACgB,WARU;AAShCC,IAAAA,YAAY,EAAEjB,QAAQ,CAACiB,YATS;AAUhCC,IAAAA,cAAc,EAAElB,QAAQ,CAACmB,YAVO;AAWhCC,IAAAA,gBAAgB,EAAEpB,QAAQ,CAACqB,cAXK;AAYhCC,IAAAA,aAAa,EAAE1B,MAAM,CAAC,CAAD,CAAN,KAAcA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAC2B,QAAD,EAAWC,IAAX,EAAiBC,OAAjB,KAA6BzB,QAAQ,CAACsB,aAAT,CAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,OAAvC,CAAvD,CAZiB;AAahCC,IAAAA,aAAa,EAAE1B,QAAQ,CAAC0B,aAbQ;AAchCC,IAAAA,WAAW,EAAE3B,QAAQ,CAAC2B,WAdU;AAehCC,IAAAA,UAAU,EAAE5B,QAAQ,CAAC6B;AAfW,GAAtB,EAgBT;AACDC,IAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBd,YAAY,CAACgE,6BAAD,CADU,EAEtBhE,YAAY,CAACwE,wBAAD,EAA2B,IAA3B,EAAiC;AAC3CqB,MAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBI,mBAAmB,CAAC,KAAD,EAAQe,UAAR,EAAoB,CACrCjC,YAAY,CAACkE,wBAAD,EAA2B;AAAE,2BAAmB;AAArB,OAA3B,EAAyE;AACnF2B,QAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,EACrBR,UAAU,CAAC,IAAD,CAAV,EAAkBE,mBAAmB,CAACJ,SAAD,EAAY,IAAZ,EAAkBF,WAAW,CAAC4D,KAAK,CAACgC,QAAP,EAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnG,iBAAQ1F,UAAU,IAAIU,YAAY,CAACiD,6BAAD,EAAgC;AAChEgC,YAAAA,OAAO,EAAEC,MAAM,IAAKnC,QAAQ,CAACoC,UAAT,CAAoBJ,IAAI,CAACK,IAAL,GAAY,GAAhC,CAD4C;AAEhEpE,YAAAA,KAAK,EAAE,iBAFyD;AAGhEc,YAAAA,GAAG,EAAEkD;AAH2D,WAAhC,EAI/B;AACDH,YAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBF,gBAAgB,CAACF,gBAAgB,CAACqF,IAAI,CAACM,IAAN,CAAjB,EAA8B;AAAE;AAAhC,aADM,CAAP,CADhB;AAIDC,YAAAA,CAAC,EAAE;AAAE;;AAJJ,WAJ+B,EAS/B;AAAK;AAT0B,YASE,CAAC,SAAD,CATF,CAAlC;AAUD,SAXkE,CAA7B,EAWlC;AAAI;AAX8B,SADhB,EAAP,CADkE;AAenFA,QAAAA,CAAC,EAAE;AAAE;;AAf8E,OAAzE,CADyB,EAkBrCpF,mBAAmB,CAAC,KAAD,EAAQgB,UAAR,EAAoB,CACrClC,YAAY,CAACmE,uBAAD,EAA0B;AAAEnC,QAAAA,KAAK,EAAE;AAAT,OAA1B,EAA4D;AACtE6D,QAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBqB,UADsB,CAAP,CADqD;AAItEmE,QAAAA,CAAC,EAAE;AAAE;;AAJiE,OAA5D,CADyB,EAOrCtG,YAAY,CAACmE,uBAAD,EAA0B;AACpCnC,QAAAA,KAAK,EAAE,qBAD6B;AAEpCuE,QAAAA,SAAS,EAAE;AAFyB,OAA1B,EAGT;AACDV,QAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBsB,UADsB,CAAP,CADhB;AAIDkE,QAAAA,CAAC,EAAE;AAAE;;AAJJ,OAHS,CAPyB,EAgBrCtG,YAAY,CAACqE,qBAAD,EAAwB;AAClCmC,QAAAA,MAAM,EAAE,MAD0B;AAElCC,QAAAA,OAAO,EAAE,qBAFyB;AAGlCC,QAAAA,SAAS,EAAE;AAHuB,OAAxB,EAIT;AACDb,QAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBd,YAAY,CAACoE,oBAAD,EAAuB;AACjCuC,UAAAA,IAAI,EAAE,SAD2B;AAEjCC,UAAAA,IAAI,EAAE,OAF2B;AAGjCX,UAAAA,OAAO,EAAElC,QAAQ,CAAC8C;AAHe,SAAvB,EAIT;AACDhB,UAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBuB,UADsB,CAAP,CADhB;AAIDiE,UAAAA,CAAC,EAAE;AAAE;;AAJJ,SAJS,EAST;AAAE;AATO,UASM,CAAC,SAAD,CATN,CADU,CAAP,CADhB;AAaDA,QAAAA,CAAC,EAAE;AAAE;;AAbJ,OAJS,CAhByB,EAmCrC1G,mBAAmB,CAAC,sFAAD,CAnCkB,EAoCrCI,YAAY,CAACoE,oBAAD,EAAuB;AACjCuC,QAAAA,IAAI,EAAE,SAD2B;AAEjCC,QAAAA,IAAI,EAAE,OAF2B;AAGjCX,QAAAA,OAAO,EAAElC,QAAQ,CAAC+C;AAHe,OAAvB,EAIT;AACDjB,QAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBwB,UADsB,CAAP,CADhB;AAIDgE,QAAAA,CAAC,EAAE;AAAE;;AAJJ,OAJS,EAST;AAAE;AATO,QASM,CAAC,SAAD,CATN,CApCyB,CAApB,CAlBkB,CAApB,CADG,EAmEtB9E,eAAe,CAACN,mBAAmB,CAAC,KAAD,EAAQqB,UAAR,EAAoB,CACrDvC,YAAY,CAACuE,wBAAD,EAA2B,IAA3B,EAAiC;AAC3CsB,QAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBI,mBAAmB,CAAC,KAAD,EAAQ;AACzB,wBAAc,OADW;AAEzBc,UAAAA,KAAK,EAAEZ,eAAe,CAAC,CAAC,YAAD,EAAe;AAAE2F,YAAAA,QAAQ,EAAEjD,KAAK,CAACiD;AAAlB,WAAf,CAAD;AAFG,SAAR,EAGhB,CACD7F,mBAAmB,CAAC,KAAD,EAAQsB,UAAR,EAAoB,CACrCC,WADqC,EAErCvB,mBAAmB,CAAC,KAAD,EAAQwB,WAAR,EAAqB,CACtC1C,YAAY,CAACoE,oBAAD,EAAuB;AACjCuC,UAAAA,IAAI,EAAE,MAD2B;AAEjCK,UAAAA,KAAK,EAAElD,KAAK,CAACiD,QAAN,GAAiB,IAAjB,GAAwB,IAFE;AAGjCd,UAAAA,OAAO,EAAEtC,MAAM,CAAC,CAAD,CAAN,KAAcA,MAAM,CAAC,CAAD,CAAN,GAAYuC,MAAM,IAAKpC,KAAK,CAACiD,QAAN,GAAiB,CAACjD,KAAK,CAACiD,QAA7D;AAHwB,SAAvB,EAIT;AACDlB,UAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBI,mBAAmB,CAAC,GAAD,EAAM;AACvBc,YAAAA,KAAK,EAAEZ,eAAe,CAAC0C,KAAK,CAACiD,QAAN,GAAiB,qBAAjB,GAAyC,eAA1C;AADC,WAAN,EAEhB,IAFgB,EAEV;AAAE;AAFQ,WADG,CAAP,CADhB;AAMDT,UAAAA,CAAC,EAAE;AAAE;;AANJ,SAJS,EAWT;AAAE;AAXO,UAWM,CAAC,OAAD,CAXN,CAD0B,EAatCtG,YAAY,CAACoE,oBAAD,EAAuB;AACjCuC,UAAAA,IAAI,EAAE,MAD2B;AAEjCK,UAAAA,KAAK,EAAE,IAF0B;AAGjCf,UAAAA,OAAO,EAAElC,QAAQ,CAACkD;AAHe,SAAvB,EAIT;AACDpB,UAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtB6B,WADsB,CAAP,CADhB;AAID2D,UAAAA,CAAC,EAAE;AAAE;;AAJJ,SAJS,EAST;AAAE;AATO,UASM,CAAC,SAAD,CATN,CAb0B,CAArB,CAFkB,CAApB,CADlB,EA4BDpF,mBAAmB,CAAC,IAAD,EAAO0B,WAAP,EAAoB,CACrChD,mBAAmB,CAAC,SAAD,CADkB,GAEpCU,UAAU,CAAC,IAAD,CAAV,EAAkBE,mBAAmB,CAACJ,SAAD,EAAY,IAAZ,EAAkBF,WAAW,CAACwD,IAAI,CAACwD,KAAL,CAAWC,QAAZ,EAAsB,CAAC5B,IAAD,EAAO6B,CAAP,KAAa;AACpG,iBAAQ9G,UAAU,IAAIE,mBAAmB,CAAC,KAAD,EAAQ;AAC/CsC,YAAAA,GAAG,EAAEsE,CAD0C;AAE/CpF,YAAAA,KAAK,EAAE;AAFwC,WAAR,EAGtC,CACDhC,YAAY,CAACsE,wBAAD,EAA2B;AACrC+C,YAAAA,IAAI,EAAE,IAD+B;AAErC9B,YAAAA,IAAI,EAAEA;AAF+B,WAA3B,EAGT,IAHS,EAGH;AAAE;AAHC,YAGY,CAAC,MAAD,CAHZ,CADX,EAKDrE,mBAAmB,CAAC,MAAD,EAAS,IAAT,EAAeR,gBAAgB,CAACqD,QAAQ,CAACuD,cAAT,CAAwB/B,IAAI,CAACgC,qBAA7B,CAAD,CAA/B,EAAsF;AAAE;AAAxF,WALlB,CAHsC,CAAzC;AAUD,SAXkE,CAA7B,EAWlC;AAAI;AAX8B,SAFD,GAcpC,CAAC7D,IAAI,CAACwD,KAAL,CAAWC,QAAX,CAAoBK,MAAtB,IACKlH,UAAU,IAAIE,mBAAmB,CAAC,KAAD,EAAQqC,WAAR,EAAqBI,WAArB,CADtC,IAEIrD,mBAAmB,CAAC,MAAD,EAAS,IAAT,CAhBc,CAApB,CA5BlB,CAHgB,EAiDhB;AAAE;AAjDc,SADG,CAAP,CAD0B;AAqD3C0G,QAAAA,CAAC,EAAE;AAAE;;AArDsC,OAAjC,CADyC,CAApB,EAwDhC;AAAI;AAxD4B,OAApB,EAwDW,CACxB,CAAChF,MAAD,EAASwC,KAAK,CAAC2D,yBAAf,CADwB,CAxDX,CAnEO,EA8HtBvG,mBAAmB,CAAC,IAAD,EAAOgC,WAAP,EAAoB,EACpC5C,UAAU,CAAC,IAAD,CAAV,EAAkBE,mBAAmB,CAACJ,SAAD,EAAY,IAAZ,EAAkBF,WAAW,CAAC4D,KAAK,CAAC4D,QAAP,EAAiB,CAAC3B,IAAD,EAAOC,KAAP,KAAiB;AACnG,eAAQ1F,UAAU,IAAIE,mBAAmB,CAAC,IAAD,EAAO;AAC9CsC,UAAAA,GAAG,EAAEkD,KADyC;AAE9ChE,UAAAA,KAAK,EAAEZ,eAAe,CAAC,CAAC2E,IAAI,CAAC,QAAD,CAAJ,GAAiB,kBAAjB,GAAsC,WAAvC,CAAD,CAFwB;AAG9C4B,UAAAA,UAAU,EAAEzB,MAAM,IAAKnC,QAAQ,CAAC6D,UAAT,CAAoB7B,IAApB;AAHuB,SAAP,EAItC,CACD7E,mBAAmB,CAAC,KAAD,EAAQ;AACzB2G,UAAAA,GAAG,EAAE9D,QAAQ,CAAC+D,WAAT,CAAqB/B,IAAI,CAACgC,KAA1B,CADoB;AAEzB/F,UAAAA,KAAK,EAAEZ,eAAe,CAAC2E,IAAI,CAACgC,KAAL,GAAa,YAAb,GAA4B,UAA7B;AAFG,SAAR,EAGhB,IAHgB,EAGV;AAAG;AAHO,UAGa3E,WAHb,CADlB,EAKDpD,YAAY,CAACqE,qBAAD,EAAwB;AAClCmC,UAAAA,MAAM,EAAE,MAD0B;AAElCC,UAAAA,OAAO,EAAEV,IAAI,CAACiC,QAFoB;AAGlCtB,UAAAA,SAAS,EAAE;AAHuB,SAAxB,EAIT;AACDb,UAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACtBI,mBAAmB,CAAC,MAAD,EAAS,IAAT,EAAeR,gBAAgB,CAACqF,IAAI,CAACiC,QAAN,CAA/B,EAAgD;AAAE;AAAlD,WADG,CAAP,CADhB;AAID1B,UAAAA,CAAC,EAAE;AAAE;;AAJJ,SAJS,EAST;AAAK;AATI,UASwB,CAAC,SAAD,CATxB,CALX,EAeAP,IAAI,CAAC,QAAD,CAAL,IACKzF,UAAU,IAAIE,mBAAmB,CAAC,GAAD,EAAM6C,WAAN,CADtC,IAEIzD,mBAAmB,CAAC,MAAD,EAAS,IAAT,CAjBtB,EAkBDI,YAAY,CAACqE,qBAAD,EAAwB;AAClCmC,UAAAA,MAAM,EAAE,MAD0B;AAElCC,UAAAA,OAAO,EAAE,qBAFyB;AAGlCC,UAAAA,SAAS,EAAE;AAHuB,SAAxB,EAIT;AACDb,UAAAA,OAAO,EAAE/E,QAAQ,CAAC,MAAM,CACrBgD,KAAK,CAACmE,YAAP,IACK3H,UAAU,IAAIE,mBAAmB,CAAC,KAAD,EAAQ;AACxCsC,YAAAA,GAAG,EAAE,CADmC;AAExCd,YAAAA,KAAK,EAAE,cAFiC;AAGxCiE,YAAAA,OAAO,EAAEC,MAAM,IAAKnC,QAAQ,CAACmE,cAAT,CAAwBnC,IAAxB;AAHoB,WAAR,EAI/B,IAJ+B,EAIzB;AAAE;AAJuB,YAIVzC,WAJU,CADtC,IAMI1D,mBAAmB,CAAC,MAAD,EAAS,IAAT,CAPD,CAAP,CADhB;AAUD0G,UAAAA,CAAC,EAAE;AAAE;;AAVJ,SAJS,EAeT;AAAK;AAfI,SAlBX,EAkCAP,IAAI,CAACiC,QAAL,KAAkB,SAAlB,IAA+BjC,IAAI,CAACiC,QAAL,KAAkB,SAAlD,IACK1H,UAAU,IAAIE,mBAAmB,CAAC,KAAD,EAAQ;AACxCsC,UAAAA,GAAG,EAAE,CADmC;AAExCd,UAAAA,KAAK,EAAE,YAFiC;AAGxCiE,UAAAA,OAAO,EAAEC,MAAM,IAAKnC,QAAQ,CAACoE,YAAT,CAAsBpC,IAAI,CAACqC,UAA3B,EAAuCrC,IAAI,CAACa,IAA5C,EAAkDb,IAAlD;AAHoB,SAAR,EAI/B,IAJ+B,EAIzB;AAAE;AAJuB,UAIVxC,WAJU,CADtC,IAMI3D,mBAAmB,CAAC,MAAD,EAAS,IAAT,CAxCtB,EAyCDsB,mBAAmB,CAAC,KAAD,EAAQ;AACzBc,UAAAA,KAAK,EAAE,WADkB;AAEzBiE,UAAAA,OAAO,EAAEC,MAAM,IAAKnC,QAAQ,CAACsE,WAAT,CAAqBtC,IAArB,EAA2BC,KAA3B;AAFK,SAAR,EAGhB,IAHgB,EAGV;AAAE;AAHQ,UAGKxC,WAHL,CAzClB,CAJsC,EAiDtC;AAAG;AAjDmC,UAiDCL,WAjDD,CAAzC;AAkDD,OAnDkE,CAA7B,EAmDlC;AAAI;AAnD8B,OADD,EAApB,CA9HG,CAAP,CAD0B;AAsL3CmD,MAAAA,CAAC,EAAE;AAAE;;AAtLsC,KAAjC,CAFU,CAAP,CADhB;AA4LDA,IAAAA,CAAC,EAAE;AAAE;;AA5LJ,GAhBS,EA6MT;AAAE;AA7MO,IA6MM,CAAC,SAAD,EAAY,kBAAZ,EAAgC,YAAhC,EAA8C,eAA9C,EAA+D,aAA/D,EAA8E,cAA9E,EAA8F,gBAA9F,EAAgH,kBAAhH,EAAoI,eAApI,EAAqJ,aAArJ,EAAoK,YAApK,CA7MN,CADyB,CAApB,CAFsC,CAAlB,EAkNtC;AAAK;AAlNiC,GAAzC;AAmND","names":["class","_createElementVNode","_hoisted_15","_createCommentVNode","_createVNode","_component_uploader","ref","options","$data","onCatchAll","$options","onUploadStart","onFileAdded","onFilesAdded","onFileComplete","onFilesSubmitted","onFileSuccess","rootFile","file","message","onFileRemoved","onFileError","onComplete","_component_uploader_unsupport","_component_uploader_drop","_component_el_breadcrumb","_createElementBlock","_Fragment","_renderList","item","index","_createBlock","_component_el_breadcrumb_item","onClick","path","key","name","_component_uploader_btn","directory","_component_el_tooltip","effect","content","placement","_component_el_button","type","size","_component_uploader_list","collapse","_hoisted_10","title","_hoisted_12","_ctx","fileList","i","_component_uploader_file","list","_toDisplayString","_lastProgressCallback","length","_hoisted_17","onDblclick","src","isDir","fileName","objectName"],"sourceRoot":"","sources":["D:\\code\\Java\\image_recognition\\vue\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n  <!-- 分布式上传文件列表 -->\r\n  <div class=\"files-wrapper\">\r\n    <uploader ref=\"uploader\" :options=\"options\" :auto-start=\"false\" :file-status-text=\"fileStatusText\"\r\n              class=\"uploader-example\" @catch-all=\"onCatchAll\" @upload-start=\"onUploadStart\" @file-added=\"onFileAdded\"\r\n              @files-added=\"onFilesAdded\" @file-complete=\"fileComplete\" @files-submitted=\"filesSubmitted\"\r\n              @file-success=\"(rootFile, file, message) => onFileSuccess(rootFile, file, message)\" @file-removed=\"onFileRemoved\"\r\n              @file-error=\"onFileError\" @complete=\"complete\">\r\n      <uploader-unsupport></uploader-unsupport>\r\n      <uploader-drop>\r\n        <div class=\"upload-title\">\r\n\r\n          <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item @click.native=\"breadcrumb(item.path + '/')\" class=\"breadcrumb-item\"\r\n                                v-for=\"(item, index) in menuItem\" :key=\"index\">\r\n              {{ item.name }}\r\n            </el-breadcrumb-item>\r\n          </el-breadcrumb>\r\n\r\n          <div class=\"upload-btn-group\">\r\n            <uploader-btn class=\"uploader-upload-btn\">上传文件</uploader-btn>\r\n            <uploader-btn class=\"uploader-upload-btn\" :directory=\"true\">上传文件夹</uploader-btn>\r\n            <el-tooltip effect=\"dark\" content=\"下载文件缓慢时：请更换网络，或分次下载\" placement=\"bottom\">\r\n              <el-button type=\"primary\" size=\"small\" @click=\"downloadAll\">批量下载</el-button>\r\n            </el-tooltip>\r\n            <!-- <el-button type=\"primary\" size=\"small\" @click=\"downloadAll\">批量下载</el-button> -->\r\n            <el-button type=\"primary\" size=\"small\" @click=\"deleteAll\">批量删除</el-button>\r\n          </div>\r\n\r\n        </div>\r\n        <div v-show=\"isShowDropUploadFileLists\" class=\"drog_list\">\r\n          <uploader-list>\r\n            <div slot-scope=\"props\" class=\"file-panel\" :class=\"{ collapse: collapse }\">\r\n              <div class=\"file-title\">\r\n                <div class=\"title\">文件列表</div>\r\n                <div class=\"operate\">\r\n                  <el-button type=\"text\" :title=\"collapse ? '展开' : '折叠'\" @click=\"collapse = !collapse\">\r\n                    <i :class=\"collapse ? 'el-icon-full-screen' : 'el-icon-minus'\" />\r\n                  </el-button>\r\n                  <el-button type=\"text\" title=\"关闭\" @click=\"closeFilesUploadList\">\r\n                    <i class=\"el-icon-close\" />\r\n                  </el-button>\r\n                </div>\r\n              </div>\r\n              <ul class=\"file-list\">\r\n\r\n                <!-- <div> -->\r\n                <div v-for=\"(file, i) in props.fileList\" :key=\"i\" class=\"file-info\">\r\n                  <uploader-file :list=\"true\" :file=\"file\">\r\n                  </uploader-file>\r\n                  <span>{{ timeConversion(file._lastProgressCallback) }}</span>\r\n                </div>\r\n                <div v-if=\"!props.fileList.length\" class=\"no-file\">\r\n                  <i class=\"iconfont icon-empty-file\" /> 暂无待上传文件\r\n                </div>\r\n              </ul>\r\n            </div>\r\n          </uploader-list>\r\n        </div>\r\n\r\n        <ul class=\"file-group\">\r\n          <li v-for=\"(item, index) in dataList\" :key=\"index\"\r\n              :class=\"[item['active'] ? 'file-item-active' : 'file-item']\" @dblclick=\"openFolder(item)\">\r\n            <img :src=\"getImageUrl(item.isDir)\" :class=\"item.isDir ? 'folderIcon' : 'fileIcon'\" />\r\n            <el-tooltip effect=\"dark\" :content=\"item.fileName\" placement=\"bottom\">\r\n              <span>{{ item.fileName }}</span>\r\n            </el-tooltip>\r\n            <i class=\"el-icon-check\" v-if=\"item['active']\"></i>\r\n\r\n            <el-tooltip effect=\"dark\" content=\"下载文件缓慢时：请更换网络，或分次下载\" placement=\"right\">\r\n              <div class=\"download-btn\" v-if=\"showDownIcon\" @click=\"handleDownload(item)\" />\r\n            </el-tooltip>\r\n            <div v-if=\"item.fileName !== 'coms_01' && item.fileName !== 'coms_02'\" class=\"remove-btn\"\r\n                 @click=\"handleRemove(item.objectName, item.size, item)\" />\r\n            <div class=\"file-mask\" @click=\"selectFiles(item, index)\"></div>\r\n          </li>\r\n        </ul>\r\n\r\n\r\n      </uploader-drop>\r\n\r\n    </uploader>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as api from '@/configs/api'\r\n\r\nexport default {\r\n  name: 'files',\r\n  data() {\r\n    return {\r\n      modelName: '数据',\r\n      menuItem: [],\r\n      dataList: [], // 文件\r\n      folderImg: '/static/img/application/folder.png',\r\n      fileImg: '/static/img/application/file.png',\r\n      options: {\r\n        // 目标上传 URL，可以是字符串也可以是函数，如果是函数的话，则会传入 Uploader.File 实例、\r\n        // 当前块 Uploader.Chunk 以及是否是测试模式，默认值为 '/'\r\n        target: function (file, chunkFile, mode) {\r\n          // 分块上传前每次都会进入到该方法\r\n          const key = chunkFile.offset; // 键值 用于获取分块链接URL\r\n          return file.chunkUrlData[key];\r\n        },\r\n        // 为每个块向服务器发出 GET 请求，以查看它是否已经存在。如果在服务器端实现，\r\n        // 这将允许在浏览器崩溃甚至计算机重新启动后继续上传。(默认: true)\r\n        testChunks: false,\r\n        // 分块时按照该值来分。最后一个上传块的大小是可能是大于等于1倍的这个值但是小于两倍的这个值大小，\r\n        // 可见这个 Issue #51，默认 1*1024*1024。\r\n        chunkSize: 5 * 1024 * 1024,\r\n        // 强制所有块小于或等于 chunkSize。否则，最后一个块将大于或等于chunkSize。(默认: false)\r\n        forceChunkSize: true,\r\n        // 服务器分片校验函数 秒传及断点续传的基础(true:不用传 false:需要传)\r\n        // checkChunkUploadedByResponse: (chunk, message) => {\r\n        // 这里根据实际业务来 用来判断哪些片已经上传过了 不用再重复上传了 [这里可以用来写断点续传！！！]\r\n        //  return false\r\n        // },\r\n\r\n        // 包含在带有数据的多部分 POST 中的额外参数。这可以是一个对象或一个函数。如果是一个函数，\r\n        // 它将被传递一个 Uploader.File、一个 Uploader.Chunk 对象和一个 isTest 布尔值（默认值{}：）\r\n        query: function (file, chunkFile, mode) {\r\n          const data = { partNumber: chunkFile.offset + 1 };\r\n          return data;\r\n        },\r\n        uploadMethod: \"PUT\",\r\n        //  当上传的时候所使用的是方式，可选 multipart、octet，默认 multipart，参考 multipart vs octet。\r\n        // MiniO 的分片不能使用表单\r\n        method: \"octet\",\r\n        //  处理请求参数，默认 function (params) {return params}，一般用于修改参数名字或者删除参数。0.5.2版本后，\r\n        processParams: function (params) {\r\n          return {};\r\n        },\r\n        // headers: {\r\n        //  'Content-Type': 'binary/octet-stream'\r\n        // }\r\n      },\r\n      fileStatusText: {\r\n        success: \"上传成功\",\r\n        error: \"上传失败\",\r\n        uploading: \"上传中\",\r\n        paused: \"暂停中\",\r\n        waiting: \"等待中\",\r\n      },\r\n      isShowDropUploadFileLists: false,\r\n      collapse: false,\r\n      chunkSize: 5 * 1024 * 1024, // 切片大小(b)\r\n      fileSetCode: null, // 修改时的数据集编码\r\n      // fileListVisible: false, // 分布式文件上传列表是否展示\r\n      filePath: '',\r\n      dataSetCode: '', // 文件路径\r\n      showDownIcon: true,\r\n      isAllCover: -1, // 是否选择全部替换(-1:未选择 0：否 1:是)\r\n      timeOut: null,\r\n    }\r\n  },\r\n  props: {\r\n    // 查询文件路径传参\r\n    filePathUrl: {\r\n      type: String,\r\n      required: true,\r\n      default: ''\r\n    },\r\n    // 存储类型：其他、论文\r\n    fileType: {\r\n      type: String,\r\n      required: true,\r\n      default: ''\r\n    },\r\n    metadataInfoCnId: {\r\n      type: String,\r\n      required: false\r\n    }\r\n  },\r\n  watch: {\r\n    fileType: {\r\n      handler(newVal, oldVal) {\r\n        if (this.menuItem[0]) this.breadcrumb(this.fileType + '/' + this.menuItem[0])\r\n        console.log(1);\r\n      },\r\n      deep: true\r\n    },\r\n  },\r\n  mounted() {\r\n    console.log('filePathUrl', this.filePathUrl);\r\n    this.showDownIcon = this.$route.query.id ? true : false\r\n    if (this.filePathUrl) {\r\n      this.$emit('getCurrentDataSetCode', this.filePathUrl.split(\"/\")[1])\r\n      this.breadcrumb(this.filePathUrl);\r\n    } else {\r\n      if (this.menuItem[0]) this.breadcrumb(this.fileType + '/' + this.menuItem[0])\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    //时间戳转化成格式时间\r\n    timeConversion(te) {\r\n      if (te == '') {\r\n        return '';\r\n      } else if (te.length == 10) {\r\n        var time = new Date(te * 1000); //时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n        var y = time.getFullYear();\r\n        var m = time.getMonth() < 9 ? '0' + (time.getMonth() + 1) : time.getMonth() + 1;\r\n        var d = time.getDate() < 10 ? '0' + time.getDate() : time.getDate();\r\n        var h = time.getHours() < 10 ? '0' + time.getHours() : time.getHours();\r\n        var mm = time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes();\r\n        var s = time.getSeconds() < 10 ? '0' + time.getSeconds() : time.getSeconds();\r\n        var timedate = y + '-' + m + '-' + d + ' ' + h + ':' + mm + ':' + s;\r\n        return timedate;\r\n      } else {\r\n        var time = new Date(te);\r\n        var y = time.getFullYear();\r\n        var m = time.getMonth() < 9 ? '0' + (time.getMonth() + 1) : time.getMonth() + 1;\r\n        var d = time.getDate() < 10 ? '0' + time.getDate() : time.getDate();\r\n        var h = time.getHours() < 10 ? '0' + time.getHours() : time.getHours();\r\n        var mm = time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes();\r\n        var s = time.getSeconds() < 10 ? '0' + time.getSeconds() : time.getSeconds();\r\n        var timedate = y + '-' + m + '-' + d + ' ' + h + ':' + mm + ':' + s;\r\n        return timedate;\r\n      }\r\n    },\r\n    // 批量下载\r\n    downloadAll() {\r\n      var pathArr = []\r\n      this.dataList.forEach(item => {\r\n        if (item['active']) {\r\n          pathArr.push(item)\r\n        }\r\n      })\r\n      if (pathArr.length == 0) {\r\n        this.$message({\r\n          type: 'warning',\r\n          message: '请先选择文件'\r\n        });\r\n      } else {\r\n        var formData = new FormData();\r\n        formData.append('datasetId', this.metadataInfoCnId)\r\n        formData.append('downPaths', JSON.stringify(pathArr))\r\n        this.axios.post(api['collection'].downloadFiles, formData, {\r\n              responseType: \"blob\"\r\n            }\r\n        ).then(response => {\r\n          console.log(response);\r\n          this.makeDownload(response, '压缩包');\r\n        })\r\n      }\r\n    },\r\n    // 批量删除\r\n    deleteAll() {\r\n      var deleteArr = []\r\n      this.dataList.forEach(item => {\r\n        if (item['active']) {\r\n          deleteArr.push(item.objectName)\r\n        }\r\n      })\r\n      if (deleteArr.length == 0) {\r\n        this.$message({\r\n          type: 'warning',\r\n          message: '请先选择文件'\r\n        });\r\n      } else {\r\n        console.log(deleteArr);\r\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          var formData = new FormData();\r\n          formData.append('filePaths', deleteArr)\r\n          formData.append('type', 0)\r\n          this.axios.post(api['collection'].deleteDistributedFiles, formData\r\n          ).then(response => {\r\n            let res = response.data\r\n            if (res.code === 200) {\r\n              this.getCatalog(this.filePath)\r\n            } else {\r\n\r\n            }\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });\r\n        });\r\n      }\r\n\r\n    },\r\n    /**\r\n     * 执行下载操作 判断是否文件夹\r\n     * @param {*} value 下载项数据\r\n     */\r\n    handleDownload(value) {\r\n      const query = this.$route.query\r\n      if (query.id) {\r\n        if (value.isDir) {\r\n          this.downloadDirResult(value, this.metadataInfoCnId);\r\n        } else {\r\n          this.downloadFileResult(value, this.metadataInfoCnId);\r\n        }\r\n      }\r\n\r\n\r\n    },\r\n    /**\r\n     * 双击文件夹\r\n     * @param {*} value 文件夹参数\r\n     */\r\n    openFolder(value) {\r\n      clearTimeout(this.timeOut);\r\n      if (value.isDir) {\r\n        this.breadcrumb(value.objectName);\r\n      }\r\n    },\r\n    /**\r\n     * 单击文件或文件夹\r\n     * @param {*} value 文件参数\r\n     */\r\n    selectFiles(value, index) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = setTimeout(() => {\r\n        this.dataList[index]['active'] = value.active ? !value.active : true\r\n        var arr = this.dataList\r\n        this.dataList = []\r\n        this.dataList = arr\r\n      }, 600)\r\n\r\n      // this.getCatalog(this.filePath,index,value.active ? !value.active : true)\r\n    },\r\n    /**\r\n     * 删除文件或文件夹\r\n     * @param {*} fileName 文件名称\r\n     * @param {*} isDir 是否文件夹\r\n     */\r\n    handleRemove(fileName, size, item) {\r\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$emit('deleteDistributedFile', fileName)\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * 下载文件\r\n     * @param {*} pathFile 文件路径\r\n     */\r\n    downloadFileResult(value, id) {\r\n      var formData = new FormData();\r\n      formData.append('minioPath', value.objectName)\r\n      formData.append('dataSize', value.size)\r\n      formData.append('datasetId', id)\r\n      this.axios.post(api['collection'].downloadSingle, formData\r\n      ).then(response => {\r\n        let res = response.data\r\n        if (res.code === 200) {\r\n          window.open(res.data);\r\n        } else {\r\n\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 下载文件夹\r\n     * @param {*} value\r\n     */\r\n    downloadDirResult(value, id) {\r\n      //防止用户多次点击\r\n      this.dataListLoading = true;\r\n      var formData = new FormData();\r\n      formData.append('minioPath', value.objectName)\r\n      formData.append('dataSize', value.size)\r\n      formData.append('datasetId', id)\r\n      this.axios.post(api['collection'].downloadSingleDir, formData, {\r\n\r\n            responseType: \"blob\"\r\n          }\r\n      ).then(response => {\r\n        this.makeDownload(response, value.fileName);\r\n      })\r\n\r\n    },\r\n    /**\r\n     * 根据类型（文件或文件夹）显示图片\r\n     * @param {*} idDir\r\n     */\r\n    getImageUrl(idDir) {\r\n      return idDir ? this.folderImg : this.fileImg;\r\n    },\r\n    /**\r\n     * 文件夹路径\r\n     * @param {*} path\r\n     */\r\n    breadcrumb(path) {\r\n      this.filePath = path\r\n      if (path !== \"\") {\r\n        this.menuItem = [];\r\n        if (path[path.length - 1] != '/') path = path + '/'\r\n        var arr = path.split(\"/\");\r\n        for (var i = 0; i < arr.length - 1; i++) {\r\n          this.menuItem.push({\r\n            name: arr[i],\r\n            path: arr.slice(0, i + 1).join(\"/\"),\r\n          });\r\n        }\r\n        this.menuItem.splice(0, 1);\r\n      } else {\r\n        this.menuItem = [];\r\n      }\r\n      this.getCatalog(path);\r\n    },\r\n    //扁平化数据处理\r\n    dataTree(data) {\r\n      let result = [];\r\n      for (const item of data) {\r\n        result.push(item);\r\n        if (item.children === null || item.children === undefined) {\r\n          continue;\r\n        }\r\n        let getChildren = dataTree(item.children);\r\n        result = result.concat(getChildren);\r\n      }\r\n      return result;\r\n    },\r\n\r\n    getCatalog(minioPath) {\r\n      if (minioPath === '') minioPath = this.menuItem[this.menuItem.length - 1].path\r\n      if (!minioPath) this.dataList = []\r\n      var formData = new FormData();\r\n      formData.append('url', minioPath)\r\n      this.axios.post(api['collection'].getDfsFileList, formData\r\n      ).then(response => {\r\n        let res = response.data\r\n        if (res.code === 200) {\r\n\r\n          this.dataList = res.data.list\r\n        } else {\r\n\r\n        }\r\n      })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    },\r\n\r\n    makeDownload(response, fileName) {\r\n      let fileBlob = new Blob([response.data]);\r\n      if (fileBlob.size <= 0) {\r\n        return this.$notify({\r\n          title: \"警告\",\r\n          message: \"后台执行中请稍后下载\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n      let url = window.URL.createObjectURL(fileBlob);\r\n      let link = document.createElement(\"a\");\r\n      link.style.display = \"none\";\r\n      link.href = url;\r\n      link.setAttribute(\"download\", fileName + \".zip\");\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    },\r\n    // 分布式上传文件\r\n    //未调用到 待测试用处\r\n    onCatchAll(event) {\r\n    },\r\n    //开始上传时进入\r\n    onUploadStart(file) {\r\n    },\r\n    onFileAdded(file) {\r\n      file.minioPath = this.minioPath;\r\n      if (file.getSize() >= 5 * 1024 * 1024 * 1024) {\r\n        // 5G\r\n        file.ignored = true; //文件校验，不符规则的文件过滤掉\r\n        return this.$message.error(file.name + \"文件过大请处理完成后重新上传\");\r\n      }\r\n      this.isShowDropUploadFileLists = true;\r\n    },\r\n    onFilesAdded(file, filelist) {\r\n\r\n    },\r\n    // 根下的单个文件（文件夹）上传完成\r\n    fileComplete(rootFile) {\r\n      this.$message({\r\n        message: rootFile.name + \"上传成功！\",\r\n        type: \"success\",\r\n      });\r\n      var index = this.filePath.lastIndexOf('/');\r\n      // this.breadcrumb(this.filePath.substring(0, index))\r\n      this.breadcrumb(this.filePath)\r\n      if (rootFile.isFolder) {\r\n\r\n      } else {\r\n      }\r\n    },\r\n    async filesSubmitted(files, fileList) {\r\n      if (files.length === 0) {\r\n        return this.$message.error(\"文件列表存在同名文件，请关闭文件列表后再试。\");\r\n      }\r\n\r\n      for (let file of files) {\r\n        const path = this.filePath\r\n        const name = '/' + file.relativePath\r\n        const size = file.size\r\n        var formData = new FormData();\r\n        formData.append('concurrentType', this.fileType)\r\n        formData.append('fileName', path + name)\r\n        formData.append('partCount', Math.ceil(size / this.chunkSize))\r\n        formData.append('fileSize', size)\r\n        if (this.fileSetCode) {\r\n          formData.append('datasetCode', this.fileSetCode)\r\n        }\r\n        let res = await this.submitFile(formData, file)\r\n      }\r\n      this.isAllCover = -1\r\n    },\r\n    // 文件提交\r\n    submitFile(formData, file) {\r\n      return new Promise((resolve, reject) => {\r\n        this.axios.post(api['collection'].uploadTestFile, formData\r\n        ).then(response => {\r\n          let res = response.data\r\n          if (res.code === 200) {\r\n            setTimeout(() => {\r\n              file.chunkUrlData = res.data.ulist\r\n              file.chunkUrlData.uploadId = res.data.uploadId\r\n              file.path = res.data.fileName\r\n              if (this.menuItem.length == 0) {\r\n                this.filePath = this.fileType + '/' + res.data.datasetCode\r\n              } else {\r\n                this.filePath = this.menuItem[this.menuItem.length - 1].path\r\n              }\r\n              this.dataSetCode = res.data.datasetCode\r\n              this.$emit('getCurrentDataSetCode', res.data.datasetCode)\r\n              this.$emit('deletePath', res.data.fileName)\r\n              // 存在重复文件\r\n              if (res.data.isExist) {\r\n                if (this.isAllCover === 1) { // 已选择全部替换\r\n                  this.startUpload(file, false)\r\n                  resolve()\r\n                } else if (this.isAllCover === -1) { // 询问是否需要全部替换\r\n                  this.$confirm('存在重复文件, 是否全部替换?', '提示', {\r\n                    confirmButtonText: '全部替换',\r\n                    cancelButtonText: '逐一替换',\r\n                    type: 'warning'\r\n                  }).then(() => {\r\n                    this.isAllCover = 1\r\n                    this.startUpload(file, false)\r\n                    resolve()\r\n                  }).catch(() => {\r\n                    this.isAllCover = 0 // 选择逐一替换\r\n                    this.$confirm(file.name + '已存在, 是否选择替换?', '提示', {\r\n                      confirmButtonText: '确定',\r\n                      cancelButtonText: '取消',\r\n                      type: 'warning'\r\n                    }).then(() => {\r\n                      this.startUpload(file, false)\r\n                      resolve()\r\n                    }).catch(() => {\r\n                      this.startUpload(file, true)\r\n                      resolve()\r\n                    });\r\n                  });\r\n                } else if (this.isAllCover === 0) {\r\n                  this.$confirm(file.name + '已存在, 是否选择替换?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                  }).then(() => {\r\n                    this.startUpload(file, false)\r\n                    resolve()\r\n                  }).catch(() => {\r\n                    this.startUpload(file, true)\r\n                    resolve()\r\n                  });\r\n                }\r\n                // this.startUpload(file, res.data.isExist)\r\n              } else {\r\n                this.startUpload(file, res.data.isExist)\r\n                resolve()\r\n              }\r\n\r\n\r\n            }, 1000);\r\n          } else {\r\n\r\n          }\r\n        })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n\r\n      })\r\n\r\n\r\n    },\r\n    // 开始上传\r\n    startUpload(file, isExist) {\r\n      if (isExist) {\r\n        file.cancel();\r\n      } else {\r\n        file.resume();\r\n      }\r\n    },\r\n    // 单个文件上传成功\r\n    onFileSuccess(rootFile, file, message) {\r\n\r\n      // 调用后台合并文件\r\n      if (file.chunks.length != 1) {\r\n        // const fileName = file.relativePath; // 文件名\r\n        const uploadId = file.chunkUrlData.uploadId; // uploadId\r\n        var formData = new FormData();\r\n        formData.append('objectName', file.path)\r\n        formData.append('uploadId', uploadId)\r\n        this.axios.post(api['collection'].completeUploadFile, formData\r\n        ).then(response => {\r\n          let res = response.data\r\n          if (res.code === 200) {\r\n\r\n            this.breadcrumb(this.filePath)\r\n          } else {\r\n\r\n          }\r\n        })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n      } else {\r\n      }\r\n    },\r\n    onFileRemoved(file) {\r\n    },\r\n    // 文件上传失败\r\n    onFileError(file) {\r\n      this.$message({\r\n        message: \"上传失败，请重试！\",\r\n        type: \"error\",\r\n      });\r\n    },\r\n    // 点击关闭按钮\r\n    closeFilesUploadList() {\r\n      this.$confirm(\r\n          this.$t(\"确定进行[关闭]操作?\", { handle: this.$t(\"close\") }),\r\n          \"待传任务将取消\",\r\n          {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: \"warning\",\r\n          }\r\n      )\r\n          .then(() => {\r\n            this.uploaderRef.cancel();\r\n            this.isShowDropUploadFileLists = false;\r\n          })\r\n          .catch(() => { });\r\n    },\r\n    // 上传完毕\r\n    complete() {\r\n\r\n    },\r\n  },\r\n  computed: {\r\n    // 获取上传文件实例\r\n    uploaderRef() {\r\n      return this.$refs.uploader.uploader;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.files-wrapper {\r\n  width: 100%;\r\n  height: 690px;\r\n  position: relative;\r\n  /* overflow: auto; */\r\n  /* background-color: #00bbff; */\r\n}\r\n\r\n.uploader-example {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.uploader-drop {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 !important;\r\n  background: #fff !important;\r\n}\r\n\r\n/* 路径标题 */\r\n.upload-title {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  /* margin: 0px 40px 0px 40px; */\r\n  height: 40px;\r\n  align-items: center;\r\n}\r\n\r\n.upload-title>div {\r\n  font-size: 18px;\r\n  /* font-weight: bold; */\r\n}\r\n\r\n.breadcrumb-item {\r\n  cursor: pointer;\r\n}\r\n\r\n*/deep/ .el-breadcrumb__item .el-breadcrumb__inner {\r\n  color: #25262b5c;\r\n  font-weight: 500;\r\n}\r\n\r\n*/deep/ .el-breadcrumb__item:last-child .el-breadcrumb__inner {\r\n  color: #000;\r\n  font-weight: bold;\r\n}\r\n\r\n*/deep/ .el-breadcrumb__item {\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-btn-group {\r\n  min-width: 200px;\r\n\r\n\r\n}\r\n\r\n.uploader-upload-btn {\r\n  color: #fff !important;\r\n  background-color: #409eff;\r\n  border-color: #409eff;\r\n  font-size: 12px;\r\n  border-radius: 3px;\r\n  /* padding: 7px 15px; */\r\n  margin: 5px 5px 5px 5px;\r\n  outline: 0;\r\n  font-weight: 500;\r\n\r\n\r\n}\r\n\r\n.uploader-upload-btn:hover {\r\n  background: #66b1ff;\r\n  border-color: #66b1ff;\r\n  color: #fff;\r\n}\r\n\r\n/* 文件按钮 */\r\n.btns {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n\r\n/* 文件列表 */\r\n.file-group {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  overflow-y: auto;\r\n  max-height: 455px;\r\n  padding: 10px;\r\n  /* max-height: calc(100vh - 238px); */\r\n}\r\n\r\n.file-item {\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.file-item {\r\n  width: 120px;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  -webkit-transition: background-color 0.3s ease;\r\n  -o-transition: background-color 0.3s ease;\r\n  transition: background-color 0.3s ease;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n  flex-direction: column;\r\n  -ms-flex-pack: start;\r\n  justify-content: flex-start;\r\n  -ms-flex-align: stretch;\r\n  align-items: center;\r\n  padding: 20px 0 0 0;\r\n  margin: 5px 16px 10px;\r\n  max-height: 160px;\r\n}\r\n\r\n.file-item>span:nth-child(2) {\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: #25262b;\r\n  max-width: 100%;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n  overflow-wrap: break-word;\r\n  margin-bottom: 2px;\r\n  -webkit-transition: color 0.3s ease;\r\n  -o-transition: color 0.3s ease;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.file-item>span:nth-child(3) {\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  line-height: 1.6;\r\n  color: #25262b5c;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.download-btn {\r\n  display: block;\r\n  z-index: 2;\r\n}\r\n\r\n.remove-btn {\r\n  display: block;\r\n  z-index: 2;\r\n}\r\n\r\n.file-item:hover {\r\n  background: #f1f1f1;\r\n}\r\n\r\n.folderIcon {\r\n  width: 115px;\r\n  height: 90px;\r\n}\r\n\r\n.fileIcon {\r\n  width: 90px;\r\n  height: 90px;\r\n}\r\n\r\n.file-item:hover>.download-btn {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  background: #fff url(\"/static/img/application/download.png\") no-repeat;\r\n  background-size: 80% 80%;\r\n  background-position: center center;\r\n\r\n}\r\n\r\n\r\n.file-item:hover>.download-btn:hover {\r\n  cursor: pointer;\r\n  background-color: #eaeaea;\r\n}\r\n\r\n.file-item:hover>.remove-btn {\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 10px;\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  background: #fff url(\"/static/img/application/delete.png\") no-repeat;\r\n  background-size: 80% 80%;\r\n  background-position: center center;\r\n\r\n}\r\n\r\n.file-item:hover>.remove-btn:hover {\r\n  cursor: pointer;\r\n  background-color: #eaeaea;\r\n}\r\n\r\n.file-mask {\r\n  position: absolute;\r\n  /* background-color: red; */\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* 批量选择样式 */\r\n.file-item-active {\r\n  background-color: #eaeaea;\r\n  cursor: pointer;\r\n  text-align: center;\r\n}\r\n\r\n.file-item-active {\r\n  width: 120px;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  -webkit-transition: background-color 0.3s ease;\r\n  -o-transition: background-color 0.3s ease;\r\n  transition: background-color 0.3s ease;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n  flex-direction: column;\r\n  -ms-flex-pack: start;\r\n  justify-content: flex-start;\r\n  -ms-flex-align: stretch;\r\n  align-items: center;\r\n  padding: 20px 0 0 0;\r\n  margin: 5px 16px 10px;\r\n  max-height: 160px;\r\n}\r\n\r\n.drog_list {\r\n  position: fixed;\r\n  position: absolute;\r\n  z-index: 20;\r\n  right: -25px;\r\n  bottom: -30px;\r\n  width: 620px;\r\n  box-sizing: border-box;\r\n\r\n}\r\n\r\n.file-panel {\r\n  background-color: #fff;\r\n  border: 1px solid #e2e2e2;\r\n  border-radius: 7px 7px 0 0;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n\r\n\r\n}\r\n\r\n\r\n.file-panel.collapse>.file-title {\r\n  background-color: #e7ecf2;\r\n}\r\n\r\n.file-panel.collapse>.file-list {\r\n  height: 0;\r\n}\r\n\r\n.file-title {\r\n  display: flex;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  padding: 0 15px;\r\n  border-bottom: 1px solid #ddd;\r\n\r\n\r\n}\r\n\r\n.operate {\r\n  flex: 1;\r\n  text-align: right;\r\n\r\n\r\n}\r\n\r\n.operate>i {\r\n  font-size: 18px;\r\n}\r\n\r\n.file-list {\r\n  position: relative;\r\n  height: 340px;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  background-color: #fff;\r\n  transition: all 0.3s;\r\n  list-style: none;\r\n  padding: 0 2%;\r\n  font-size: 12px;\r\n}\r\n\r\n/* 文件列表 样式 */\r\n.file-info /deep/ .uploader-file>.uploader-file-info>.uploader-file-name {\r\n  width: 30%;\r\n}\r\n\r\n.file-info /deep/ .uploader-file>.uploader-file-info>.uploader-file-meta {\r\n  width: 0%;\r\n}\r\n\r\n.file-info {\r\n  position: relative;\r\n}\r\n\r\n.file-info>span {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 15px;\r\n}\r\n\r\n.custom-status {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.el-icon-check:before {\r\n  color: #24ed19;\r\n  position: absolute;\r\n  top: 0;\r\n  /* right: 0; */\r\n  left: 0;\r\n  font-size: 17px;\r\n  border: 1px solid #24ed19;\r\n  /* border-radius: 40px; */\r\n  padding: 4px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}