{"ast":null,"code":"import { Plus } from '@element-plus/icons-vue';\nimport request from \"@/utils/request\";\nimport { filesaver } from 'file-saver';\nexport default {\n  name: \"recognition\",\n  components: {\n    Plus\n  },\n\n  data() {\n    return {\n      classes: [],\n      newClass: '',\n      imageCounts: [],\n      url: \"\",\n      path: '',\n      deskpath: '',\n      word: [],\n      number: 1,\n      downloadTxtButtonFlag: 0\n    };\n  },\n\n  methods: {\n    // downloadTxt() {\n    //   let str = this.word;\n    //   let strData = new Blob([str], { type: 'text/plain;charset=utf-8' });\n    //   saveAs(strData, \"翻译文件.txt\");\n    // },\n    addClass() {\n      if (this.newClass !== '') {\n        this.classes.push(this.newClass);\n        this.imageCounts.push(1);\n        this.newClass = '';\n        request.get(\"/file/mkcls\", {\n          params: {\n            newclass: this.newClass\n          }\n        }).then(res => {});\n      }\n    },\n\n    // upload() {\n    //   console.log(this.deskpath)\n    //   request.get(\"/book/recognize\", {\n    //     params: {\n    //       path:this.deskpath\n    //     }\n    //   }).then(res => {\n    //     console.log(res);\n    //\n    //     if (res.code === '0') {\n    //       this.$message({\n    //         type: \"success\",\n    //         message: \"上传成功\"\n    //       })\n    //       console.log(res.data[9])\n    //       this.word = this.word  +'['+ this.number+']:';\n    //       this.word = this.word  + res.data;\n    //       this.word = this.word  +'\\n';\n    //       this.number++;\n    //       this.downloadTxtButtonFlag = 1;\n    //\n    //     } else {\n    //       this.$message({\n    //         type: \"warning\",\n    //         message: res.msg\n    //       })\n    //     }\n    //   })\n    // },\n    getImageIndex(index) {\n      // 返回当前类别已上传的图片数量\n      return this.imageCounts[index];\n    },\n\n    handleAvatarSuccess(index) {\n      this.imageCounts[index]++; // console.log(this.url);\n      // this.url = res;\n      // this.path = this.url.split('/');\n      // // console.log(this.path)\n      // this.deskpath = 'D:/code/springboot+vue/image_recognition/vue/public/image/' + sessionStorage.getItem(\"currentId\");\n      // console.log(this.deskpath);\n      // this.upload();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAEA,SAAQA,IAAR,QAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,aADO;AAEbC,EAAAA,UAAU,EAAE;AAACJ,IAAAA;AAAD,GAFC;;AAGbK,EAAAA,IAAI,GAAG;AACL,WAAO;AACLC,MAAAA,OAAO,EAAE,EADJ;AAELC,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,WAAW,EAAE,EAHR;AAILC,MAAAA,GAAG,EAAE,EAJA;AAKLC,MAAAA,IAAI,EAAC,EALA;AAMLC,MAAAA,QAAQ,EAAC,EANJ;AAOLC,MAAAA,IAAI,EAAC,EAPA;AAQLC,MAAAA,MAAM,EAAC,CARF;AASLC,MAAAA,qBAAqB,EAAC;AATjB,KAAP;AAWD,GAfY;;AAgBbC,EAAAA,OAAO,EAAC;AACN;AACA;AACA;AACA;AACA;AACAC,IAAAA,QAAQ,GAAG;AACT,UAAI,KAAKT,QAAL,KAAkB,EAAtB,EAA0B;AACxB,aAAKD,OAAL,CAAaW,IAAb,CAAkB,KAAKV,QAAvB;AACA,aAAKC,WAAL,CAAiBS,IAAjB,CAAsB,CAAtB;AACA,aAAKV,QAAL,GAAgB,EAAhB;AACEN,QAAAA,OAAO,CAACiB,GAAR,CAAY,aAAZ,EAA2B;AACzBC,UAAAA,MAAM,EAAE;AACNC,YAAAA,QAAQ,EAAC,KAAKb;AADR;AADiB,SAA3B,EAIGc,IAJH,CAIQC,GAAG,IAAI,CAEd,CAND;AAOH;AACF,KAnBK;;AAoBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB;AACA,aAAO,KAAKhB,WAAL,CAAiBgB,KAAjB,CAAP;AACD,KApDK;;AAqDNC,IAAAA,mBAAmB,CAACD,KAAD,EACnB;AACE,WAAKhB,WAAL,CAAiBgB,KAAjB,IADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AA/DK;AAhBK,CAAf","names":["Plus","request","filesaver","name","components","data","classes","newClass","imageCounts","url","path","deskpath","word","number","downloadTxtButtonFlag","methods","addClass","push","get","params","newclass","then","res","getImageIndex","index","handleAvatarSuccess"],"sourceRoot":"","sources":["D:\\code\\Java\\image_recognition\\vue\\src\\views\\Recognition.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"text\" v-model=\"newClass\">\r\n    <button @click=\"addClass\">Add Class</button>\r\n    <hr>\r\n    <div v-for=\"(item, index) in classes\" :key=\"index\">\r\n      <h3>{{ item.name }}</h3>\r\n      <el-upload\r\n          class=\"upload-demo\"\r\n          drag\r\n          action=\"http://localhost:9090/file/upload\"\r\n          :on-success=\"handleAvatarSuccess(index)\"\r\n          list-type=\"picture\"\r\n          multiple\r\n          :data=\"{ ClassId: item.name, imageIndex: getImageIndex(index) }\"\r\n      >\r\n        <el-icon class=\"el-icon--upload\"><Plus/></el-icon>\r\n        <div class=\"el-upload__text\">\r\n          拖到这里 /<em>点击上传</em>\r\n        </div>\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\">\r\n            jpg/png files with a size less than 500kb\r\n          </div>\r\n        </template>\r\n      </el-upload>\r\n    </div>\r\n  </div>\r\n  <div class=\"bg\"></div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport {Plus} from '@element-plus/icons-vue';\r\nimport request from \"@/utils/request\";\r\nimport { filesaver } from 'file-saver';\r\n\r\nexport default {\r\n  name: \"recognition\",\r\n  components: {Plus},\r\n  data() {\r\n    return {\r\n      classes: [],\r\n      newClass: '',\r\n      imageCounts: [],\r\n      url: \"\",\r\n      path:'',\r\n      deskpath:'',\r\n      word:[],\r\n      number:1,\r\n      downloadTxtButtonFlag:0,\r\n    }\r\n  },\r\n  methods:{\r\n    // downloadTxt() {\r\n    //   let str = this.word;\r\n    //   let strData = new Blob([str], { type: 'text/plain;charset=utf-8' });\r\n    //   saveAs(strData, \"翻译文件.txt\");\r\n    // },\r\n    addClass() {\r\n      if (this.newClass !== '') {\r\n        this.classes.push(this.newClass);\r\n        this.imageCounts.push(1);\r\n        this.newClass = '';\r\n          request.get(\"/file/mkcls\", {\r\n            params: {\r\n              newclass:this.newClass\r\n            }\r\n          }).then(res => {\r\n\r\n          })\r\n      }\r\n    },\r\n    // upload() {\r\n    //   console.log(this.deskpath)\r\n    //   request.get(\"/book/recognize\", {\r\n    //     params: {\r\n    //       path:this.deskpath\r\n    //     }\r\n    //   }).then(res => {\r\n    //     console.log(res);\r\n    //\r\n    //     if (res.code === '0') {\r\n    //       this.$message({\r\n    //         type: \"success\",\r\n    //         message: \"上传成功\"\r\n    //       })\r\n    //       console.log(res.data[9])\r\n    //       this.word = this.word  +'['+ this.number+']:';\r\n    //       this.word = this.word  + res.data;\r\n    //       this.word = this.word  +'\\n';\r\n    //       this.number++;\r\n    //       this.downloadTxtButtonFlag = 1;\r\n    //\r\n    //     } else {\r\n    //       this.$message({\r\n    //         type: \"warning\",\r\n    //         message: res.msg\r\n    //       })\r\n    //     }\r\n    //   })\r\n    // },\r\n    getImageIndex(index) {\r\n      // 返回当前类别已上传的图片数量\r\n      return this.imageCounts[index]\r\n    },\r\n    handleAvatarSuccess(index)\r\n    {\r\n      this.imageCounts[index]++\r\n      // console.log(this.url);\r\n      // this.url = res;\r\n      // this.path = this.url.split('/');\r\n      // // console.log(this.path)\r\n      // this.deskpath = 'D:/code/springboot+vue/image_recognition/vue/public/image/' + sessionStorage.getItem(\"currentId\");\r\n      // console.log(this.deskpath);\r\n      // this.upload();\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.upcard{\r\n  align-content: center;\r\n  background-color: wheat;\r\n  width: 85%;\r\n  min-height: 550px;\r\n  height: 100%;\r\n  opacity: 0.8;\r\n  border-radius: 30px;\r\n  margin: 50px 0 60px 60px;\r\n\r\n\r\n  /* 为其整体设置接近透明的效果*/\r\n  background-color: #ffffff;\r\n  /* 设置box-shadow使其有立体感 */\r\n  /*box-shadow: 5px 5px 0 0 rgba(0, 0, 0, 1);*/\r\n\r\n  padding: 0 50px;\r\n}\r\n.bg {\r\n  width: 100%;\r\n  height: 580px;\r\n  background-color: #ffffff;\r\n  position: absolute;\r\n  margin-top: 58px;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  background-size: 100% 522px;\r\n  min-width: 1000px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}