{"ast":null,"code":"import { Plus } from '@element-plus/icons-vue';\nimport request from \"@/utils/request\";\nimport { filesaver } from 'file-saver';\nexport default {\n  name: \"recognition\",\n  components: {\n    Plus\n  },\n\n  data() {\n    return {\n      classes: [],\n      newClass: '',\n      url: \"\",\n      path: '',\n      deskpath: '',\n      word: [],\n      number: 1,\n      downloadTxtButtonFlag: 0\n    };\n  },\n\n  methods: {\n    // downloadTxt() {\n    //   let str = this.word;\n    //   let strData = new Blob([str], { type: 'text/plain;charset=utf-8' });\n    //   saveAs(strData, \"翻译文件.txt\");\n    // },\n    upload() {\n      console.log(this.deskpath);\n      request.get(\"/book/recognize\", {\n        params: {\n          path: this.deskpath\n        }\n      }).then(res => {\n        console.log(res);\n\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"上传成功\"\n          });\n          console.log(res.data[9]);\n          this.word = this.word + '[' + this.number + ']:';\n          this.word = this.word + res.data;\n          this.word = this.word + '\\n';\n          this.number++;\n          this.downloadTxtButtonFlag = 1;\n        } else {\n          this.$message({\n            type: \"warning\",\n            message: res.msg\n          });\n        }\n      });\n    },\n\n    handleAvatarSuccess(res) {\n      console.log(this.url);\n      this.url = res;\n      this.path = this.url.split('/'); // console.log(this.path)\n\n      this.deskpath = 'D:/code/springboot+vue/image_recognition/vue/public/image/' + sessionStorage.getItem(\"currentId\"); // console.log(this.deskpath);\n\n      this.upload();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAEA,SAAQA,IAAR,QAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,aADO;AAEbC,EAAAA,UAAU,EAAE;AAACJ,IAAAA;AAAD,GAFC;;AAGbK,EAAAA,IAAI,GAAG;AACL,WAAO;AACLC,MAAAA,OAAO,EAAE,EADJ;AAELC,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,GAAG,EAAE,EAHA;AAILC,MAAAA,IAAI,EAAC,EAJA;AAKLC,MAAAA,QAAQ,EAAC,EALJ;AAMLC,MAAAA,IAAI,EAAC,EANA;AAOLC,MAAAA,MAAM,EAAC,CAPF;AAQLC,MAAAA,qBAAqB,EAAC;AARjB,KAAP;AAUD,GAdY;;AAebC,EAAAA,OAAO,EAAC;AACN;AACA;AACA;AACA;AACA;AACAC,IAAAA,MAAM,GAAG;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,QAAjB;AACAT,MAAAA,OAAO,CAACiB,GAAR,CAAY,iBAAZ,EAA+B;AAC7BC,QAAAA,MAAM,EAAE;AACNV,UAAAA,IAAI,EAAC,KAAKC;AADJ;AADqB,OAA/B,EAIGU,IAJH,CAIQC,GAAG,IAAI;AACbL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;;AAEA,YAAIA,GAAG,CAACC,IAAJ,KAAa,GAAjB,EAAsB;AACpB,eAAKC,QAAL,CAAc;AACZC,YAAAA,IAAI,EAAE,SADM;AAEZC,YAAAA,OAAO,EAAE;AAFG,WAAd;AAIAT,UAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAAChB,IAAJ,CAAS,CAAT,CAAZ;AACA,eAAKM,IAAL,GAAY,KAAKA,IAAL,GAAY,GAAZ,GAAiB,KAAKC,MAAtB,GAA6B,IAAzC;AACA,eAAKD,IAAL,GAAY,KAAKA,IAAL,GAAaU,GAAG,CAAChB,IAA7B;AACA,eAAKM,IAAL,GAAY,KAAKA,IAAL,GAAY,IAAxB;AACA,eAAKC,MAAL;AACA,eAAKC,qBAAL,GAA6B,CAA7B;AAED,SAZD,MAYO;AACL,eAAKU,QAAL,CAAc;AACZC,YAAAA,IAAI,EAAE,SADM;AAEZC,YAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFD,WAAd;AAID;AACF,OAzBD;AA0BD,KAlCK;;AAmCNC,IAAAA,mBAAmB,CAACN,GAAD,EACnB;AACEL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,GAAjB;AACA,WAAKA,GAAL,GAAWa,GAAX;AACA,WAAKZ,IAAL,GAAY,KAAKD,GAAL,CAASoB,KAAT,CAAe,GAAf,CAAZ,CAHF,CAIE;;AACA,WAAKlB,QAAL,GAAgB,+DAA+DmB,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAA/E,CALF,CAME;;AACA,WAAKf,MAAL;AACD;;AA5CK;AAfK,CAAf","names":["Plus","request","filesaver","name","components","data","classes","newClass","url","path","deskpath","word","number","downloadTxtButtonFlag","methods","upload","console","log","get","params","then","res","code","$message","type","message","msg","handleAvatarSuccess","split","sessionStorage","getItem"],"sourceRoot":"","sources":["D:\\code\\Java\\image_recognition\\vue\\src\\views\\Recognition.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"text\" v-model=\"newClass\">\r\n    <button @click=\"addClass\">Add Class</button>\r\n    <hr>\r\n    <div v-for=\"(item, index) in classes\" :key=\"index\">\r\n      <h3>{{ item.name }}</h3>\r\n      <input type=\"file\" @change=\"uploadFile(index)\">\r\n    </div>\r\n  </div>\r\n  <div class=\"bg\"></div>\r\n  <el-card class=\"upcard\">\r\n    <div style=\"display: flex\">\r\n    <el-upload\r\n        class=\"upload-demo\"\r\n        drag\r\n        action=\"http://localhost:9090/file/upload\"\r\n        :on-success=\"handleAvatarSuccess\"\r\n        list-type=\"picture\"\r\n        multiple\r\n        :data=\"{  }\"\r\n    >\r\n      <el-icon class=\"el-icon--upload\"><Plus/></el-icon>\r\n      <div class=\"el-upload__text\">\r\n        拖到这里 /<em>点击上传</em>\r\n      </div>\r\n      <template #tip>\r\n        <div class=\"el-upload__tip\">\r\n          jpg/png files with a size less than 500kb\r\n        </div>\r\n      </template>\r\n    </el-upload>\r\n    <div style=\"white-space: pre-wrap;margin: 50px\">{{word}}</div>\r\n    </div>\r\n  </el-card>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport {Plus} from '@element-plus/icons-vue';\r\nimport request from \"@/utils/request\";\r\nimport { filesaver } from 'file-saver';\r\n\r\nexport default {\r\n  name: \"recognition\",\r\n  components: {Plus},\r\n  data() {\r\n    return {\r\n      classes: [],\r\n      newClass: '',\r\n      url: \"\",\r\n      path:'',\r\n      deskpath:'',\r\n      word:[],\r\n      number:1,\r\n      downloadTxtButtonFlag:0,\r\n    }\r\n  },\r\n  methods:{\r\n    // downloadTxt() {\r\n    //   let str = this.word;\r\n    //   let strData = new Blob([str], { type: 'text/plain;charset=utf-8' });\r\n    //   saveAs(strData, \"翻译文件.txt\");\r\n    // },\r\n    upload() {\r\n      console.log(this.deskpath)\r\n      request.get(\"/book/recognize\", {\r\n        params: {\r\n          path:this.deskpath\r\n        }\r\n      }).then(res => {\r\n        console.log(res);\r\n\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"上传成功\"\r\n          })\r\n          console.log(res.data[9])\r\n          this.word = this.word  +'['+ this.number+']:';\r\n          this.word = this.word  + res.data;\r\n          this.word = this.word  +'\\n';\r\n          this.number++;\r\n          this.downloadTxtButtonFlag = 1;\r\n\r\n        } else {\r\n          this.$message({\r\n            type: \"warning\",\r\n            message: res.msg\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(res)\r\n    {\r\n      console.log(this.url);\r\n      this.url = res;\r\n      this.path = this.url.split('/');\r\n      // console.log(this.path)\r\n      this.deskpath = 'D:/code/springboot+vue/image_recognition/vue/public/image/' + sessionStorage.getItem(\"currentId\");\r\n      // console.log(this.deskpath);\r\n      this.upload();\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.upcard{\r\n  align-content: center;\r\n  background-color: wheat;\r\n  width: 85%;\r\n  min-height: 550px;\r\n  height: 100%;\r\n  opacity: 0.8;\r\n  border-radius: 30px;\r\n  margin: 50px 0 60px 60px;\r\n\r\n\r\n  /* 为其整体设置接近透明的效果*/\r\n  background-color: #ffffff;\r\n  /* 设置box-shadow使其有立体感 */\r\n  /*box-shadow: 5px 5px 0 0 rgba(0, 0, 0, 1);*/\r\n\r\n  padding: 0 50px;\r\n}\r\n.bg {\r\n  width: 100%;\r\n  height: 580px;\r\n  background-color: #ffffff;\r\n  position: absolute;\r\n  margin-top: 58px;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  background-size: 100% 522px;\r\n  min-width: 1000px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}